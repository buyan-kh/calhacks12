{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/Button/TldrawUiButton.tsx"],"sourcesContent":["import classnames from 'classnames'\nimport * as React from 'react'\n\n/** @public */\nexport interface TLUiButtonProps extends React.HTMLAttributes<HTMLButtonElement> {\n\tdisabled?: boolean\n\tisActive?: boolean\n\ttype: 'normal' | 'primary' | 'danger' | 'low' | 'icon' | 'tool' | 'menu' | 'help'\n}\n\nconst namedClassNamesSoThatICanGrepForThis = {\n\tnormal: 'tlui-button__normal',\n\tprimary: 'tlui-button__primary',\n\tdanger: 'tlui-button__danger',\n\tlow: 'tlui-button__low',\n\ticon: 'tlui-button__icon',\n\ttool: 'tlui-button__tool',\n\tmenu: 'tlui-button__menu',\n\thelp: 'tlui-button__help',\n}\n\n/** @public @react */\nexport const TldrawUiButton = React.forwardRef<HTMLButtonElement, TLUiButtonProps>(\n\tfunction TldrawUiButton({ children, type, isActive, ...props }, ref) {\n\t\treturn (\n\t\t\t<button\n\t\t\t\tref={ref}\n\t\t\t\ttype=\"button\"\n\t\t\t\tdraggable={false}\n\t\t\t\tdata-isactive={isActive}\n\t\t\t\t{...props}\n\t\t\t\tclassName={classnames(\n\t\t\t\t\t'tlui-button',\n\t\t\t\t\tnamedClassNamesSoThatICanGrepForThis[type],\n\t\t\t\t\tprops.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</button>\n\t\t)\n\t}\n)\n"],"names":["TldrawUiButton"],"mappings":";;;;AAyBG;AAzBH,OAAO,gBAAgB;AACvB,YAAY,WAAW;;;;AASvB,MAAM,uCAAuC;IAC5C,QAAQ;IACR,SAAS;IACT,QAAQ;IACR,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;AACP;AAGO,MAAM,iBAAiB,MAAM,6MAAA,CACnC,SAASA,gBAAe,EAAE,QAAA,EAAU,IAAA,EAAM,QAAA,EAAU,GAAG,MAAM,CAAA,EAAG,GAAA,EAAK;IACpE,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,UAAA;QACA;QACA,MAAK;QACL,WAAW;QACX,iBAAe;QACd,GAAG,KAAA;QACJ,eAAW,8IAAA,EACV,eACA,oCAAA,CAAqC,IAAI,CAAA,EACzC,MAAM,SAAA;QAGN;IAAA;AAGJ","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/Button/TldrawUiButtonLabel.tsx"],"sourcesContent":["import { ReactNode } from 'react'\n\n/** @public */\nexport interface TLUiButtonLabelProps {\n\tchildren?: ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiButtonLabel({ children }: TLUiButtonLabelProps) {\n\treturn <span className=\"tlui-button__label\">{children}</span>\n}\n"],"names":[],"mappings":";;;;AASQ;;AADD,SAAS,oBAAoB,EAAE,QAAA,CAAS,CAAA,EAAyB;IACvE,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,QAAA;QAAK,WAAU;QAAsB;IAAA,CAAS;AACvD","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/TldrawUiIcon.tsx"],"sourcesContent":["import classNames from 'classnames'\nimport { cloneElement, memo, ReactElement, useLayoutEffect, useRef } from 'react'\nimport { useAssetUrls } from '../../context/asset-urls'\nimport { TLUiIconType } from '../../icon-types'\n\n/** @public */\nexport type TLUiIconJsx = ReactElement<React.HTMLAttributes<HTMLDivElement>>\n\n/** @public */\nexport interface TLUiIconProps extends React.HTMLAttributes<HTMLDivElement> {\n\ticon: TLUiIconType | Exclude<string, TLUiIconType> | TLUiIconJsx\n\tlabel: string\n\tsmall?: boolean\n\tcolor?: string\n\tchildren?: undefined\n\tinvertIcon?: boolean\n\tcrossOrigin?: 'anonymous' | 'use-credentials'\n}\n\n/** @public @react */\nexport const TldrawUiIcon = memo(function TldrawUiIcon({\n\tlabel,\n\tsmall,\n\tinvertIcon,\n\ticon,\n\tcolor,\n\tclassName,\n\t...props\n}: TLUiIconProps) {\n\tif (typeof icon === 'string') {\n\t\treturn (\n\t\t\t<TldrawUIIconInner\n\t\t\t\tlabel={label}\n\t\t\t\tsmall={small}\n\t\t\t\tinvertIcon={invertIcon}\n\t\t\t\ticon={icon}\n\t\t\t\tcolor={color}\n\t\t\t\tclassName={className}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn cloneElement(icon, {\n\t\t...props,\n\t\tclassName: classNames({ 'tlui-icon__small': small }, className, icon.props.className),\n\t\t'aria-label': label,\n\t\tstyle: {\n\t\t\tcolor,\n\t\t\ttransform: invertIcon ? 'scale(-1, 1)' : undefined,\n\t\t\t...icon.props.style,\n\t\t},\n\t})\n})\n\nfunction TldrawUIIconInner({\n\tlabel,\n\tsmall,\n\tinvertIcon,\n\ticon,\n\tcolor,\n\tclassName,\n\t...props\n}: TLUiIconProps & { icon: TLUiIconType | Exclude<string, TLUiIconType> }) {\n\tconst assetUrls = useAssetUrls()\n\tconst asset = assetUrls.icons[icon as TLUiIconType] ?? assetUrls.icons['question-mark-circle']\n\tconst ref = useRef<HTMLDivElement>(null)\n\n\tuseLayoutEffect(() => {\n\t\tif (!asset) {\n\t\t\tconsole.error(`Icon not found: ${icon}. Add it to the assetUrls.icons object.`)\n\t\t}\n\n\t\tif (ref?.current) {\n\t\t\t// HACK: Fix for <https://linear.app/tldraw/issue/TLD-1700/dragging-around-with-the-handtool-makes-lots-of-requests-for-icons>\n\t\t\t// It seems that passing `WebkitMask` to react will cause a render on each call, no idea why... but this appears to be the fix.\n\t\t\t// @ts-ignore\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-deprecated\n\t\t\tref.current.style.webkitMask = `url(${asset}) center 100% / 100% no-repeat`\n\t\t}\n\t}, [ref, asset, icon])\n\n\tif (icon === 'none') {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'tlui-icon tlui-icon__placeholder',\n\t\t\t\t\t{ 'tlui-icon__small': small },\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div\n\t\t\t{...props}\n\t\t\tref={ref}\n\t\t\taria-label={label}\n\t\t\trole=\"img\"\n\t\t\tclassName={classNames('tlui-icon', { 'tlui-icon__small': small }, className)}\n\t\t\tstyle={{\n\t\t\t\tcolor,\n\t\t\t\tmask: `url(${asset}) center 100% / 100% no-repeat`,\n\t\t\t\ttransform: invertIcon ? 'scale(-1, 1)' : undefined,\n\t\t\t}}\n\t\t/>\n\t)\n}\n"],"names":["TldrawUiIcon"],"mappings":";;;;AA+BG;AA/BH,OAAO,gBAAgB;AACvB,SAAS,cAAc,MAAoB,iBAAiB,cAAc;AAC1E,SAAS,oBAAoB;;;;;AAkBtB,MAAM,mBAAe,6MAAA,EAAK,SAASA,cAAa,EACtD,KAAA,EACA,KAAA,EACA,UAAA,EACA,IAAA,EACA,KAAA,EACA,SAAA,EACA,GAAG,OACJ,EAAkB;IACjB,IAAI,OAAO,SAAS,UAAU;QAC7B,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,mBAAA;YACA;YACA;YACA;YACA;YACA;YACA;YACC,GAAG,KAAA;QAAA;IAGP;IAEA,WAAO,qNAAA,EAAa,MAAM;QACzB,GAAG,KAAA;QACH,eAAW,8IAAA,EAAW;YAAE,oBAAoB;QAAM,GAAG,WAAW,KAAK,KAAA,CAAM,SAAS;QACpF,cAAc;QACd,OAAO;YACN;YACA,WAAW,aAAa,iBAAiB,KAAA;YACzC,GAAG,KAAK,KAAA,CAAM,KAAA;QACf;IACD,CAAC;AACF,CAAC;AAED,SAAS,kBAAkB,EAC1B,KAAA,EACA,KAAA,EACA,UAAA,EACA,IAAA,EACA,KAAA,EACA,SAAA,EACA,GAAG,OACJ,EAA2E;IAC1E,MAAM,gBAAY,+LAAA,CAAa;IAC/B,MAAM,QAAQ,UAAU,KAAA,CAAM,IAAoB,CAAA,IAAK,UAAU,KAAA,CAAM,sBAAsB,CAAA;IAC7F,MAAM,UAAM,+MAAA,EAAuB,IAAI;IAEvC,IAAA,wNAAA,EAAgB,MAAM;QACrB,IAAI,CAAC,OAAO;YACX,QAAQ,KAAA,CAAM,CAAA,gBAAA,EAAmB,IAAI,CAAA,uCAAA,CAAyC;QAC/E;QAEA,IAAI,KAAK,SAAS;YAKjB,IAAI,OAAA,CAAQ,KAAA,CAAM,UAAA,GAAa,CAAA,IAAA,EAAO,KAAK,CAAA,8BAAA,CAAA;QAC5C;IACD,GAAG;QAAC;QAAK;QAAO,IAAI;KAAC;IAErB,IAAI,SAAS,QAAQ;QACpB,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;YACA,eAAW,8IAAA,EACV,oCACA;gBAAE,oBAAoB;YAAM,GAC5B;YAEA,GAAG,KAAA;QAAA;IAGP;IAEA,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;QACC,GAAG,KAAA;QACJ;QACA,cAAY;QACZ,MAAK;QACL,eAAW,8IAAA,EAAW,aAAa;YAAE,oBAAoB;QAAM,GAAG,SAAS;QAC3E,OAAO;YACN;YACA,MAAM,CAAA,IAAA,EAAO,KAAK,CAAA,8BAAA,CAAA;YAClB,WAAW,aAAa,iBAAiB,KAAA;QAC1C;IAAA;AAGH","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/Button/TldrawUiButtonIcon.tsx"],"sourcesContent":["import { TldrawUiIcon, TLUiIconJsx } from '../TldrawUiIcon'\n\n/** @public */\nexport interface TLUiButtonIconProps {\n\ticon: string | TLUiIconJsx\n\tsmall?: boolean\n\tinvertIcon?: boolean\n}\n\n/** @public @react */\nexport function TldrawUiButtonIcon({ icon, small, invertIcon }: TLUiButtonIconProps) {\n\treturn (\n\t\t<TldrawUiIcon\n\t\t\taria-hidden=\"true\"\n\t\t\tlabel=\"\"\n\t\t\tclassName=\"tlui-button__icon\"\n\t\t\ticon={icon}\n\t\t\tsmall={small}\n\t\t\tinvertIcon={invertIcon}\n\t\t/>\n\t)\n}\n"],"names":[],"mappings":";;;;AAYE;AAZF,SAAS,oBAAiC;;;AAUnC,SAAS,mBAAmB,EAAE,IAAA,EAAM,KAAA,EAAO,UAAA,CAAW,CAAA,EAAwB;IACpF,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,+MAAA,EAAA;QACA,eAAY;QACZ,OAAM;QACN,WAAU;QACV;QACA;QACA;IAAA;AAGH","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/TldrawUiDialog.tsx"],"sourcesContent":["import classNames from 'classnames'\nimport { Dialog as _Dialog } from 'radix-ui'\nimport { CSSProperties, ReactNode } from 'react'\nimport { useTranslation } from '../../hooks/useTranslation/useTranslation'\nimport { TldrawUiButton } from './Button/TldrawUiButton'\nimport { TldrawUiButtonIcon } from './Button/TldrawUiButtonIcon'\n\n/** @public */\nexport interface TLUiDialogHeaderProps {\n\tclassName?: string\n\tchildren: ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiDialogHeader({ className, children }: TLUiDialogHeaderProps) {\n\treturn <div className={classNames('tlui-dialog__header', className)}>{children}</div>\n}\n\n/** @public */\nexport interface TLUiDialogTitleProps {\n\tclassName?: string\n\tchildren: ReactNode\n\tstyle?: CSSProperties\n}\n\n/** @public @react */\nexport function TldrawUiDialogTitle({ className, children, style }: TLUiDialogTitleProps) {\n\treturn (\n\t\t<_Dialog.Title\n\t\t\tdir=\"ltr\"\n\t\t\tclassName={classNames('tlui-dialog__header__title', className)}\n\t\t\tstyle={style}\n\t\t>\n\t\t\t{children}\n\t\t</_Dialog.Title>\n\t)\n}\n\n/** @public @react */\nexport function TldrawUiDialogCloseButton() {\n\tconst msg = useTranslation()\n\n\treturn (\n\t\t<div className=\"tlui-dialog__header__close\">\n\t\t\t<_Dialog.DialogClose data-testid=\"dialog.close\" dir=\"ltr\" asChild>\n\t\t\t\t<TldrawUiButton\n\t\t\t\t\ttype=\"icon\"\n\t\t\t\t\taria-label={msg('ui.close')}\n\t\t\t\t\tonTouchEnd={(e) => (e.target as HTMLButtonElement).click()}\n\t\t\t\t>\n\t\t\t\t\t<TldrawUiButtonIcon small icon=\"cross-2\" />\n\t\t\t\t</TldrawUiButton>\n\t\t\t</_Dialog.DialogClose>\n\t\t</div>\n\t)\n}\n\n/** @public */\nexport interface TLUiDialogBodyProps {\n\tclassName?: string\n\tchildren: ReactNode\n\tstyle?: CSSProperties\n}\n\n/** @public @react */\nexport function TldrawUiDialogBody({ className, children, style }: TLUiDialogBodyProps) {\n\treturn (\n\t\t<div className={classNames('tlui-dialog__body', className)} style={style} tabIndex={0}>\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n\n/** @public */\nexport interface TLUiDialogFooterProps {\n\tclassName?: string\n\tchildren?: ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiDialogFooter({ className, children }: TLUiDialogFooterProps) {\n\treturn <div className={classNames('tlui-dialog__footer', className)}>{children}</div>\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAeQ;AAfR,OAAO,gBAAgB;AACvB,SAAS,UAAU,eAAe;AAElC,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B;;;;;;;AAS5B,SAAS,qBAAqB,EAAE,SAAA,EAAW,QAAA,CAAS,CAAA,EAA0B;IACpF,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;QAAI,eAAW,8IAAA,EAAW,uBAAuB,SAAS;QAAI;IAAA,CAAS;AAChF;AAUO,SAAS,oBAAoB,EAAE,SAAA,EAAW,QAAA,EAAU,KAAA,CAAM,CAAA,EAAyB;IACzF,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,8MAAA,CAAQ,KAAA,EAAR;QACA,KAAI;QACJ,eAAW,8IAAA,EAAW,8BAA8B,SAAS;QAC7D;QAEC;IAAA;AAGJ;AAGO,SAAS,4BAA4B;IAC3C,MAAM,UAAM,kNAAA,CAAe;IAE3B,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;QAAI,WAAU;QACd,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,8MAAA,CAAQ,WAAA,EAAR;YAAoB,eAAY;YAAe,KAAI;YAAM,SAAO;YAChE,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,6NAAA,EAAA;gBACA,MAAK;gBACL,cAAY,IAAI,UAAU;gBAC1B,YAAY,CAAC,IAAO,EAAE,MAAA,CAA6B,KAAA,CAAM;gBAEzD,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,qOAAA,EAAA;oBAAmB,OAAK;oBAAC,MAAK;gBAAA,CAAU;YAAA;QAC1C,CACD;IAAA,CACD;AAEF;AAUO,SAAS,mBAAmB,EAAE,SAAA,EAAW,QAAA,EAAU,KAAA,CAAM,CAAA,EAAwB;IACvF,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;QAAI,eAAW,8IAAA,EAAW,qBAAqB,SAAS;QAAG;QAAc,UAAU;QAClF;IAAA,CACF;AAEF;AASO,SAAS,qBAAqB,EAAE,SAAA,EAAW,QAAA,CAAS,CAAA,EAA0B;IACpF,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;QAAI,eAAW,8IAAA,EAAW,uBAAuB,SAAS;QAAI;IAAA,CAAS;AAChF","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/TldrawUiInput.tsx"],"sourcesContent":["import { tlenv, tltime, useMaybeEditor } from '@tldraw/editor'\nimport classNames from 'classnames'\nimport * as React from 'react'\nimport { TLUiTranslationKey } from '../../hooks/useTranslation/TLUiTranslationKey'\nimport { useTranslation } from '../../hooks/useTranslation/useTranslation'\nimport { TLUiIconType } from '../../icon-types'\nimport { TldrawUiIcon } from './TldrawUiIcon'\n\n/** @public */\nexport interface TLUiInputProps {\n\tdisabled?: boolean\n\tlabel?: TLUiTranslationKey | Exclude<string, TLUiTranslationKey>\n\ticon?: TLUiIconType | Exclude<string, TLUiIconType>\n\ticonLeft?: TLUiIconType | Exclude<string, TLUiIconType>\n\ticonLabel?: TLUiTranslationKey | Exclude<string, TLUiTranslationKey>\n\tautoFocus?: boolean\n\tautoSelect?: boolean\n\tchildren?: React.ReactNode\n\tdefaultValue?: string\n\tplaceholder?: string\n\tonComplete?(value: string): void\n\tonValueChange?(value: string): void\n\tonCancel?(value: string): void\n\tonBlur?(value: string): void\n\tonFocus?(): void\n\tclassName?: string\n\t/**\n\t * Usually on iOS when you focus an input, the browser will adjust the viewport to bring the input\n\t * into view. Sometimes this doesn't work properly though - for example, if the input is newly\n\t * created, iOS seems to have a hard time adjusting the viewport for it. This prop allows you to\n\t * opt-in to some extra code to manually bring the input into view when the visual viewport of the\n\t * browser changes, but we don't want to use it everywhere because generally the native behavior\n\t * looks nicer in scenarios where it's sufficient.\n\t */\n\tshouldManuallyMaintainScrollPositionWhenFocused?: boolean\n\tvalue?: string\n\t'data-testid'?: string\n\t'aria-label'?: string\n}\n\n/** @public @react */\nexport const TldrawUiInput = React.forwardRef<HTMLInputElement, TLUiInputProps>(\n\tfunction TldrawUiInput(\n\t\t{\n\t\t\tclassName,\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ticonLeft,\n\t\t\ticonLabel,\n\t\t\tautoSelect = false,\n\t\t\tautoFocus = false,\n\t\t\tdefaultValue,\n\t\t\tplaceholder,\n\t\t\tonComplete,\n\t\t\tonValueChange,\n\t\t\tonCancel,\n\t\t\tonFocus,\n\t\t\tonBlur,\n\t\t\tshouldManuallyMaintainScrollPositionWhenFocused = false,\n\t\t\tchildren,\n\t\t\tvalue,\n\t\t\t'data-testid': dataTestId,\n\t\t\tdisabled,\n\t\t\t'aria-label': ariaLabel,\n\t\t},\n\t\tref\n\t) {\n\t\tconst editor = useMaybeEditor()\n\t\tconst rInputRef = React.useRef<HTMLInputElement>(null)\n\n\t\t// combine rInputRef and ref\n\t\tReact.useImperativeHandle(ref, () => rInputRef.current as HTMLInputElement)\n\n\t\tconst msg = useTranslation()\n\t\tconst rInitialValue = React.useRef<string>(defaultValue ?? '')\n\t\tconst rCurrentValue = React.useRef<string>(defaultValue ?? '')\n\n\t\tconst isComposing = React.useRef(false)\n\n\t\tconst [isFocused, setIsFocused] = React.useState(false)\n\t\tconst handleFocus = React.useCallback(\n\t\t\t(e: React.FocusEvent<HTMLInputElement>) => {\n\t\t\t\tsetIsFocused(true)\n\t\t\t\tconst elm = e.currentTarget as HTMLInputElement\n\t\t\t\trCurrentValue.current = elm.value\n\t\t\t\tif (editor) {\n\t\t\t\t\teditor.timers.requestAnimationFrame(() => {\n\t\t\t\t\t\tif (autoSelect) {\n\t\t\t\t\t\t\telm.select()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\ttltime.requestAnimationFrame('anon', () => {\n\t\t\t\t\t\tif (autoSelect) {\n\t\t\t\t\t\t\telm.select()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tonFocus?.()\n\t\t\t},\n\t\t\t[autoSelect, editor, onFocus]\n\t\t)\n\n\t\tconst handleChange = React.useCallback(\n\t\t\t(e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\tconst value = e.currentTarget.value\n\t\t\t\trCurrentValue.current = value\n\t\t\t\tonValueChange?.(value)\n\t\t\t},\n\t\t\t[onValueChange]\n\t\t)\n\n\t\t// We use keydown capture, because we want to get the escape key event.\n\t\tconst handleKeyDownCapture = React.useCallback(\n\t\t\t(e: React.KeyboardEvent<HTMLInputElement>) => {\n\t\t\t\tswitch (e.key) {\n\t\t\t\t\tcase 'Enter': {\n\t\t\t\t\t\t// In Chrome, if the user presses the Enter key while using the IME and calls\n\t\t\t\t\t\t// `e.currentTarget.blur()` in the event callback here, it will trigger an\n\t\t\t\t\t\t// `onChange` with a duplicated text value.\n\t\t\t\t\t\tif (isComposing.current) return\n\t\t\t\t\t\te.currentTarget.blur()\n\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\tonComplete?.(e.currentTarget.value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase 'Escape': {\n\t\t\t\t\t\te.currentTarget.value = rInitialValue.current\n\t\t\t\t\t\tonCancel?.(e.currentTarget.value)\n\t\t\t\t\t\te.currentTarget.blur()\n\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t[onComplete, onCancel]\n\t\t)\n\n\t\tconst handleBlur = React.useCallback(\n\t\t\t(e: React.FocusEvent<HTMLInputElement>) => {\n\t\t\t\tsetIsFocused(false)\n\t\t\t\tconst value = e.currentTarget.value\n\t\t\t\tonBlur?.(value)\n\t\t\t},\n\t\t\t[onBlur]\n\t\t)\n\n\t\tconst handleCompositionStart = React.useCallback(() => (isComposing.current = true), [])\n\t\tconst handleCompositionEnd = React.useCallback(() => (isComposing.current = false), [])\n\n\t\tReact.useEffect(() => {\n\t\t\tif (!tlenv.isIos) return\n\n\t\t\tconst visualViewport = window.visualViewport\n\t\t\tif (isFocused && shouldManuallyMaintainScrollPositionWhenFocused && visualViewport) {\n\t\t\t\tconst onViewportChange = () => {\n\t\t\t\t\trInputRef.current?.scrollIntoView({ block: 'center' })\n\t\t\t\t}\n\t\t\t\tvisualViewport.addEventListener('resize', onViewportChange)\n\t\t\t\tvisualViewport.addEventListener('scroll', onViewportChange)\n\n\t\t\t\tif (editor) {\n\t\t\t\t\teditor.timers.requestAnimationFrame(() => {\n\t\t\t\t\t\trInputRef.current?.scrollIntoView({ block: 'center' })\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\ttltime.requestAnimationFrame('anon', () => {\n\t\t\t\t\t\trInputRef.current?.scrollIntoView({ block: 'center' })\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\treturn () => {\n\t\t\t\t\tvisualViewport.removeEventListener('resize', onViewportChange)\n\t\t\t\t\tvisualViewport.removeEventListener('scroll', onViewportChange)\n\t\t\t\t}\n\t\t\t}\n\t\t}, [isFocused, editor, shouldManuallyMaintainScrollPositionWhenFocused])\n\n\t\treturn (\n\t\t\t<div draggable={false} className=\"tlui-input__wrapper\">\n\t\t\t\t{children}\n\t\t\t\t{label && <label>{msg(label)}</label>}\n\t\t\t\t{iconLeft && (\n\t\t\t\t\t<TldrawUiIcon\n\t\t\t\t\t\tlabel={iconLabel ? msg(iconLabel) : ''}\n\t\t\t\t\t\ticon={iconLeft}\n\t\t\t\t\t\tclassName=\"tlui-icon-left\"\n\t\t\t\t\t\tsmall\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<input\n\t\t\t\t\tref={rInputRef}\n\t\t\t\t\tclassName={classNames('tlui-input', className)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\tonKeyDownCapture={handleKeyDownCapture}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonFocus={handleFocus}\n\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\tonCompositionStart={handleCompositionStart}\n\t\t\t\t\tonCompositionEnd={handleCompositionEnd}\n\t\t\t\t\tautoFocus={autoFocus}\n\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tdata-testid={dataTestId}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t/>\n\t\t\t\t{icon && (\n\t\t\t\t\t<TldrawUiIcon label={iconLabel ? msg(iconLabel) : ''} icon={icon} small={!!label} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n)\n"],"names":["TldrawUiInput", "value"],"mappings":"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","debugId":null}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/menus/TldrawUiMenuContext.tsx"],"sourcesContent":["import { createContext, useContext } from 'react'\nimport { TLUiEventSource } from '../../../context/events'\n\n/** @public */\nexport type TLUiMenuContextType =\n\t| 'menu'\n\t| 'small-icons'\n\t| 'context-menu'\n\t| 'icons'\n\t| 'keyboard-shortcuts'\n\t| 'helper-buttons'\n\t| 'toolbar'\n\t| 'toolbar-overflow'\n\nconst menuContext = createContext<{\n\ttype: TLUiMenuContextType\n\tsourceId: TLUiEventSource\n} | null>(null)\n\n/** @public */\nexport function useTldrawUiMenuContext() {\n\tconst context = useContext(menuContext)\n\tif (!context) {\n\t\tthrow new Error('useTldrawUiMenuContext must be used within a TldrawUiMenuContextProvider')\n\t}\n\treturn context\n}\n\n/** @public */\nexport interface TLUiMenuContextProviderProps {\n\ttype: TLUiMenuContextType\n\tsourceId: TLUiEventSource\n\tchildren: React.ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiMenuContextProvider({\n\ttype,\n\tsourceId,\n\tchildren,\n}: TLUiMenuContextProviderProps) {\n\treturn <menuContext.Provider value={{ type, sourceId }}>{children}</menuContext.Provider>\n}\n"],"names":[],"mappings":";;;;;;AAyCQ;AAzCR,SAAS,eAAe,kBAAkB;;;AAc1C,MAAM,kBAAc,sNAAA,EAGV,IAAI;AAGP,SAAS,yBAAyB;IACxC,MAAM,cAAU,mNAAA,EAAW,WAAW;IACtC,IAAI,CAAC,SAAS;QACb,MAAM,IAAI,MAAM,0EAA0E;IAC3F;IACA,OAAO;AACR;AAUO,SAAS,4BAA4B,EAC3C,IAAA,EACA,QAAA,EACA,QAAA,EACD,EAAiC;IAChC,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,YAAY,QAAA,EAAZ;QAAqB,OAAO;YAAE;YAAM;QAAS;QAAI;IAAA,CAAS;AACnE","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/TldrawUiDropdownMenu.tsx"],"sourcesContent":["import { preventDefault, useContainer } from '@tldraw/editor'\nimport classNames from 'classnames'\nimport { DropdownMenu as _DropdownMenu } from 'radix-ui'\nimport { ReactNode } from 'react'\nimport { useMenuIsOpen } from '../../hooks/useMenuIsOpen'\nimport { useTranslation } from '../../hooks/useTranslation/useTranslation'\nimport { TldrawUiButton } from './Button/TldrawUiButton'\nimport { TldrawUiButtonIcon } from './Button/TldrawUiButtonIcon'\nimport { TldrawUiButtonLabel } from './Button/TldrawUiButtonLabel'\nimport { TldrawUiIcon } from './TldrawUiIcon'\n\n/** @public */\nexport interface TLUiDropdownMenuRootProps {\n\tid: string\n\tchildren: ReactNode\n\tmodal?: boolean\n\tdebugOpen?: boolean\n}\n\n/** @public @react */\nexport function TldrawUiDropdownMenuRoot({\n\tid,\n\tchildren,\n\tmodal = false,\n\tdebugOpen = false,\n}: TLUiDropdownMenuRootProps) {\n\tconst [open, onOpenChange] = useMenuIsOpen(id)\n\n\treturn (\n\t\t<_DropdownMenu.Root\n\t\t\topen={debugOpen || open}\n\t\t\tdir=\"ltr\"\n\t\t\tmodal={modal}\n\t\t\tonOpenChange={onOpenChange}\n\t\t>\n\t\t\t{children}\n\t\t</_DropdownMenu.Root>\n\t)\n}\n\n/** @public */\nexport interface TLUiDropdownMenuTriggerProps {\n\tchildren?: ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiDropdownMenuTrigger({ children, ...rest }: TLUiDropdownMenuTriggerProps) {\n\treturn (\n\t\t<_DropdownMenu.Trigger\n\t\t\tdir=\"ltr\"\n\t\t\tasChild\n\t\t\t// Firefox fix: Stop the dropdown immediately closing after touch\n\t\t\tonTouchEnd={(e) => preventDefault(e)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{children}\n\t\t</_DropdownMenu.Trigger>\n\t)\n}\n\n/** @public */\nexport interface TLUiDropdownMenuContentProps {\n\tid?: string\n\tclassName?: string\n\tside?: 'bottom' | 'top' | 'right' | 'left'\n\talign?: 'start' | 'center' | 'end'\n\tsideOffset?: number\n\talignOffset?: number\n\tchildren: ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiDropdownMenuContent({\n\tclassName,\n\tside = 'bottom',\n\talign = 'start',\n\tsideOffset = 8,\n\talignOffset = 8,\n\tchildren,\n}: TLUiDropdownMenuContentProps) {\n\tconst container = useContainer()\n\n\treturn (\n\t\t<_DropdownMenu.Portal container={container}>\n\t\t\t<_DropdownMenu.Content\n\t\t\t\tclassName={classNames('tlui-menu', className)}\n\t\t\t\tside={side}\n\t\t\t\tsideOffset={sideOffset}\n\t\t\t\talign={align}\n\t\t\t\talignOffset={alignOffset}\n\t\t\t\tcollisionPadding={4}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</_DropdownMenu.Content>\n\t\t</_DropdownMenu.Portal>\n\t)\n}\n\n/** @public */\nexport interface TLUiDropdownMenuSubProps {\n\tid: string\n\tchildren: ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiDropdownMenuSub({ id, children }: TLUiDropdownMenuSubProps) {\n\tconst [open, onOpenChange] = useMenuIsOpen(id)\n\n\treturn (\n\t\t<_DropdownMenu.Sub open={open} onOpenChange={onOpenChange}>\n\t\t\t{children}\n\t\t</_DropdownMenu.Sub>\n\t)\n}\n\n/** @public */\nexport interface TLUiDropdownMenuSubTriggerProps {\n\tlabel: string\n\tid?: string\n\ttitle?: string\n\tdisabled?: boolean\n}\n\n/** @public @react */\nexport function TldrawUiDropdownMenuSubTrigger({\n\tid,\n\tlabel,\n\ttitle,\n\tdisabled,\n}: TLUiDropdownMenuSubTriggerProps) {\n\treturn (\n\t\t<_DropdownMenu.SubTrigger dir=\"ltr\" asChild disabled={disabled}>\n\t\t\t<TldrawUiButton\n\t\t\t\tdata-testid={id}\n\t\t\t\ttype=\"menu\"\n\t\t\t\tclassName=\"tlui-menu__submenu__trigger\"\n\t\t\t\tdisabled={disabled}\n\t\t\t\ttitle={title}\n\t\t\t>\n\t\t\t\t<TldrawUiButtonLabel>{label}</TldrawUiButtonLabel>\n\t\t\t\t<TldrawUiButtonIcon icon=\"chevron-right\" small />\n\t\t\t</TldrawUiButton>\n\t\t</_DropdownMenu.SubTrigger>\n\t)\n}\n\n/** @public */\nexport interface TLUiDropdownMenuSubContentProps {\n\tid?: string\n\talignOffset?: number\n\tsideOffset?: number\n\tsize?: 'tiny' | 'small' | 'medium' | 'wide'\n\tchildren: ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiDropdownMenuSubContent({\n\tid,\n\talignOffset = -1,\n\tsideOffset = -6,\n\tsize = 'small',\n\tchildren,\n}: TLUiDropdownMenuSubContentProps) {\n\tconst container = useContainer()\n\treturn (\n\t\t<_DropdownMenu.Portal container={container}>\n\t\t\t<_DropdownMenu.SubContent\n\t\t\t\tdata-testid={id}\n\t\t\t\tclassName=\"tlui-menu tlui-menu__submenu__content\"\n\t\t\t\talignOffset={alignOffset}\n\t\t\t\tsideOffset={sideOffset}\n\t\t\t\tcollisionPadding={4}\n\t\t\t\tdata-size={size}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</_DropdownMenu.SubContent>\n\t\t</_DropdownMenu.Portal>\n\t)\n}\n\n/** @public */\nexport interface TLUiDropdownMenuGroupProps {\n\tchildren: ReactNode\n\tclassName?: string\n}\n\n/** @public @react */\nexport function TldrawUiDropdownMenuGroup({ className, children }: TLUiDropdownMenuGroupProps) {\n\treturn (\n\t\t<div dir=\"ltr\" className={classNames('tlui-menu__group', className)}>\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n\n/** @public @react */\nexport function TldrawUiDropdownMenuIndicator() {\n\tconst msg = useTranslation()\n\n\treturn (\n\t\t<_DropdownMenu.ItemIndicator dir=\"ltr\" asChild>\n\t\t\t<TldrawUiIcon label={msg('ui.checked')} icon=\"check\" />\n\t\t</_DropdownMenu.ItemIndicator>\n\t)\n}\n\n/** @public */\nexport interface TLUiDropdownMenuItemProps {\n\tnoClose?: boolean\n\tchildren: ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiDropdownMenuItem({ noClose, children }: TLUiDropdownMenuItemProps) {\n\treturn (\n\t\t<_DropdownMenu.Item dir=\"ltr\" asChild onClick={noClose ? preventDefault : undefined}>\n\t\t\t{children}\n\t\t</_DropdownMenu.Item>\n\t)\n}\n\n/** @public */\nexport interface TLUiDropdownMenuCheckboxItemProps {\n\tchecked?: boolean\n\tonSelect?(e: Event): void\n\tdisabled?: boolean\n\ttitle: string\n\tchildren: ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiDropdownMenuCheckboxItem({\n\tchildren,\n\tonSelect,\n\t...rest\n}: TLUiDropdownMenuCheckboxItemProps) {\n\tconst msg = useTranslation()\n\n\treturn (\n\t\t<_DropdownMenu.CheckboxItem\n\t\t\tdir=\"ltr\"\n\t\t\tclassName=\"tlui-button tlui-button__menu tlui-button__checkbox\"\n\t\t\tonSelect={(e) => {\n\t\t\t\tonSelect?.(e)\n\t\t\t\tpreventDefault(e)\n\t\t\t}}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<div className=\"tlui-button__checkbox__indicator\">\n\t\t\t\t<_DropdownMenu.ItemIndicator dir=\"ltr\">\n\t\t\t\t\t<TldrawUiIcon label={msg('ui.checked')} icon=\"check\" small />\n\t\t\t\t</_DropdownMenu.ItemIndicator>\n\t\t\t</div>\n\t\t\t{children}\n\t\t</_DropdownMenu.CheckboxItem>\n\t)\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 628, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/TldrawUiKbd.tsx"],"sourcesContent":["import { PORTRAIT_BREAKPOINT } from '../../constants'\nimport { useBreakpoint } from '../../context/breakpoints'\nimport { kbd } from '../../kbd-utils'\n\n/** @public */\nexport interface TLUiKbdProps {\n\tchildren: string\n\tvisibleOnMobileLayout?: boolean\n}\n\n/** @public @react */\nexport function TldrawUiKbd({ children, visibleOnMobileLayout = false }: TLUiKbdProps) {\n\tconst breakpoint = useBreakpoint()\n\tif (!visibleOnMobileLayout && breakpoint < PORTRAIT_BREAKPOINT.MOBILE) return null\n\treturn (\n\t\t<kbd className=\"tlui-kbd\">\n\t\t\t{kbd(children).map((k, i) => (\n\t\t\t\t<span key={i}>{k}</span>\n\t\t\t))}\n\t\t</kbd>\n\t)\n}\n"],"names":[],"mappings":";;;;AAiBI;AAjBJ,SAAS,2BAA2B;AACpC,SAAS,qBAAqB;AAC9B,SAAS,WAAW;;;;;AASb,SAAS,YAAY,EAAE,QAAA,EAAU,wBAAwB,KAAA,CAAM,CAAA,EAAiB;IACtF,MAAM,iBAAa,8LAAA,CAAc;IACjC,IAAI,CAAC,yBAAyB,aAAa,uLAAA,CAAoB,MAAA,CAAQ,CAAA,OAAO;IAC9E,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;QAAI,WAAU;QACb,UAAA,IAAA,0KAAA,EAAI,QAAQ,EAAE,GAAA,CAAI,CAAC,GAAG,IACtB,aAAA,GAAA,IAAA,8NAAA,EAAC,QAAA;gBAAc,UAAA;YAAA,GAAJ,CAAM,CACjB;IAAA,CACF;AAEF","debugId":null}},
    {"offset": {"line": 656, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/layout.tsx"],"sourcesContent":["import classNames from 'classnames'\nimport { Slot } from 'radix-ui'\nimport { HTMLAttributes, ReactNode, createContext, forwardRef, useContext } from 'react'\n\n/** @public */\nexport interface TldrawUiOrientationContext {\n\torientation: 'horizontal' | 'vertical'\n\ttooltipSide: 'top' | 'right' | 'bottom' | 'left'\n}\n\nconst TldrawUiOrientationContext = createContext<TldrawUiOrientationContext>({\n\torientation: 'horizontal',\n\ttooltipSide: 'bottom',\n})\n\n/** @public */\nexport interface TldrawUiOrientationProviderProps {\n\tchildren: ReactNode\n\torientation: 'horizontal' | 'vertical'\n\ttooltipSide?: 'top' | 'right' | 'bottom' | 'left'\n}\n/** @public @react */\nexport function TldrawUiOrientationProvider({\n\tchildren,\n\torientation,\n\ttooltipSide,\n}: TldrawUiOrientationProviderProps) {\n\tconst prevContext = useTldrawUiOrientation()\n\t// generally, we want tooltip side to cascade down through the layout - apart from when the\n\t// orientation changes. If the tooltip side is \"bottom\", and then I include some vertical layout\n\t// elements, keeping the tooltip side as bottom will cause the tooltip to overlap elements\n\t// stacked on top of each other. In the absence of a tooltip side, we pick a default side based\n\t// on the orientation whenever the orientation changes.\n\tconst tooltipSideToUse =\n\t\ttooltipSide ??\n\t\t(orientation === prevContext.orientation\n\t\t\t? prevContext.tooltipSide\n\t\t\t: orientation === 'horizontal'\n\t\t\t\t? 'bottom'\n\t\t\t\t: 'right')\n\n\treturn (\n\t\t<TldrawUiOrientationContext.Provider value={{ orientation, tooltipSide: tooltipSideToUse }}>\n\t\t\t{children}\n\t\t</TldrawUiOrientationContext.Provider>\n\t)\n}\n\n/** @public */\nexport function useTldrawUiOrientation() {\n\treturn useContext(TldrawUiOrientationContext)\n}\n\n/** @public */\nexport interface TLUiLayoutProps extends HTMLAttributes<HTMLDivElement> {\n\tchildren: ReactNode\n\ttooltipSide?: 'top' | 'right' | 'bottom' | 'left'\n\tasChild?: boolean\n}\n\n/**\n * A row, usually of UI controls like buttons, select dropdown, checkboxes, etc.\n *\n * @public @react\n */\nexport const TldrawUiRow = forwardRef<HTMLDivElement, TLUiLayoutProps>(\n\t({ asChild, className, tooltipSide, ...props }, ref) => {\n\t\tconst Component = asChild ? Slot.Root : 'div'\n\t\treturn (\n\t\t\t<TldrawUiOrientationProvider orientation=\"horizontal\" tooltipSide={tooltipSide}>\n\t\t\t\t<Component ref={ref} className={classNames('tlui-row', className)} {...props} />\n\t\t\t</TldrawUiOrientationProvider>\n\t\t)\n\t}\n)\n\n/**\n * A column, usually of UI controls like buttons, select dropdown, checkboxes, etc.\n *\n * @public @react\n */\nexport const TldrawUiColumn = forwardRef<HTMLDivElement, TLUiLayoutProps>(\n\t({ asChild, className, tooltipSide, ...props }, ref) => {\n\t\tconst Component = asChild ? Slot.Root : 'div'\n\t\treturn (\n\t\t\t<TldrawUiOrientationProvider orientation=\"vertical\" tooltipSide={tooltipSide}>\n\t\t\t\t<Component ref={ref} className={classNames('tlui-column', className)} {...props} />\n\t\t\t</TldrawUiOrientationProvider>\n\t\t)\n\t}\n)\n\n/**\n * A tight grid 4 elements wide, usually of UI controls like buttons, select dropdown, checkboxes,\n * etc.\n *\n * @public @react */\nexport const TldrawUiGrid = forwardRef<HTMLDivElement, TLUiLayoutProps>(\n\t({ asChild, className, tooltipSide, ...props }, ref) => {\n\t\tconst Component = asChild ? Slot.Root : 'div'\n\t\treturn (\n\t\t\t<TldrawUiOrientationProvider orientation=\"horizontal\" tooltipSide={tooltipSide}>\n\t\t\t\t<Component ref={ref} className={classNames('tlui-grid', className)} {...props} />\n\t\t\t</TldrawUiOrientationProvider>\n\t\t)\n\t}\n)\n"],"names":[],"mappings":";;;;;;;;;;;;AA0CE;AA1CF,OAAO,gBAAgB;AACvB,SAAS,YAAY;AACrB,SAAoC,eAAe,YAAY,kBAAkB;;;;;AAQjF,MAAM,iCAA6B,sNAAA,EAA0C;IAC5E,aAAa;IACb,aAAa;AACd,CAAC;AASM,SAAS,4BAA4B,EAC3C,QAAA,EACA,WAAA,EACA,WAAA,EACD,EAAqC;IACpC,MAAM,cAAc,uBAAuB;IAM3C,MAAM,mBACL,eAAA,CACC,gBAAgB,YAAY,WAAA,GAC1B,YAAY,WAAA,GACZ,gBAAgB,eACf,WACA,OAAA;IAEL,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,2BAA2B,QAAA,EAA3B;QAAoC,OAAO;YAAE;YAAa,aAAa;QAAiB;QACvF;IAAA,CACF;AAEF;AAGO,SAAS,yBAAyB;IACxC,WAAO,mNAAA,EAAW,0BAA0B;AAC7C;AAcO,MAAM,kBAAc,mNAAA,EAC1B,CAAC,EAAE,OAAA,EAAS,SAAA,EAAW,WAAA,EAAa,GAAG,MAAM,CAAA,EAAG,QAAQ;IACvD,MAAM,YAAY,UAAU,wMAAA,CAAK,IAAA,GAAO;IACxC,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,6BAAA;QAA4B,aAAY;QAAa;QACrD,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,WAAA;YAAU;YAAU,eAAW,8IAAA,EAAW,YAAY,SAAS;YAAI,GAAG,KAAA;QAAA,CAAO;IAAA,CAC/E;AAEF;AAQM,MAAM,qBAAiB,mNAAA,EAC7B,CAAC,EAAE,OAAA,EAAS,SAAA,EAAW,WAAA,EAAa,GAAG,MAAM,CAAA,EAAG,QAAQ;IACvD,MAAM,YAAY,UAAU,wMAAA,CAAK,IAAA,GAAO;IACxC,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,6BAAA;QAA4B,aAAY;QAAW;QACnD,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,WAAA;YAAU;YAAU,eAAW,8IAAA,EAAW,eAAe,SAAS;YAAI,GAAG,KAAA;QAAA,CAAO;IAAA,CAClF;AAEF;AAQM,MAAM,mBAAe,mNAAA,EAC3B,CAAC,EAAE,OAAA,EAAS,SAAA,EAAW,WAAA,EAAa,GAAG,MAAM,CAAA,EAAG,QAAQ;IACvD,MAAM,YAAY,UAAU,wMAAA,CAAK,IAAA,GAAO;IACxC,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,6BAAA;QAA4B,aAAY;QAAa;QACrD,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,WAAA;YAAU;YAAU,eAAW,8IAAA,EAAW,aAAa,SAAS;YAAI,GAAG,KAAA;QAAA,CAAO;IAAA,CAChF;AAEF","debugId":null}},
    {"offset": {"line": 736, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/TldrawUiTooltip.tsx"],"sourcesContent":["import { assert, Atom, atom, Editor, uniqueId, useMaybeEditor, useValue } from '@tldraw/editor'\nimport { Tooltip as _Tooltip } from 'radix-ui'\nimport React, {\n\tcreateContext,\n\tforwardRef,\n\tReactNode,\n\tuseContext,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseState,\n} from 'react'\nimport { useTldrawUiOrientation } from './layout'\n\nconst DEFAULT_TOOLTIP_DELAY_MS = 700\n\n/** @public */\nexport interface TldrawUiTooltipProps {\n\tchildren: React.ReactNode\n\tcontent?: string | React.ReactNode\n\tside?: 'top' | 'right' | 'bottom' | 'left'\n\tsideOffset?: number\n\tdisabled?: boolean\n\tshowOnMobile?: boolean\n\tdelayDuration?: number\n}\n\ninterface CurrentTooltip {\n\tid: string\n\tcontent: ReactNode\n\tside: 'top' | 'right' | 'bottom' | 'left'\n\tsideOffset: number\n\tshowOnMobile: boolean\n\ttargetElement: HTMLElement\n\tdelayDuration: number\n}\n\n// Singleton tooltip manager\nclass TooltipManager {\n\tprivate static instance: TooltipManager | null = null\n\tprivate currentTooltip = atom<CurrentTooltip | null>('current tooltip', null)\n\tprivate destroyTimeoutId: number | null = null\n\n\tstatic getInstance(): TooltipManager {\n\t\tif (!TooltipManager.instance) {\n\t\t\tTooltipManager.instance = new TooltipManager()\n\t\t}\n\t\treturn TooltipManager.instance\n\t}\n\n\tshowTooltip(\n\t\ttooltipId: string,\n\t\tcontent: string | React.ReactNode,\n\t\ttargetElement: HTMLElement,\n\t\tside: 'top' | 'right' | 'bottom' | 'left',\n\t\tsideOffset: number,\n\t\tshowOnMobile: boolean,\n\t\tdelayDuration: number\n\t) {\n\t\t// Clear any existing destroy timeout\n\t\tif (this.destroyTimeoutId) {\n\t\t\tclearTimeout(this.destroyTimeoutId)\n\t\t\tthis.destroyTimeoutId = null\n\t\t}\n\n\t\t// Update current tooltip\n\t\tthis.currentTooltip.set({\n\t\t\tid: tooltipId,\n\t\t\tcontent,\n\t\t\tside,\n\t\t\tsideOffset,\n\t\t\tshowOnMobile,\n\t\t\ttargetElement,\n\t\t\tdelayDuration,\n\t\t})\n\t}\n\n\tupdateCurrentTooltip(tooltipId: string, update: (tooltip: CurrentTooltip) => CurrentTooltip) {\n\t\tthis.currentTooltip.update((tooltip) => {\n\t\t\tif (tooltip?.id === tooltipId) {\n\t\t\t\treturn update(tooltip)\n\t\t\t}\n\t\t\treturn tooltip\n\t\t})\n\t}\n\n\thideTooltip(editor: Editor | null, tooltipId: string, instant: boolean = false) {\n\t\tconst hide = () => {\n\t\t\t// Only hide if this is the current tooltip\n\t\t\tif (this.currentTooltip.get()?.id === tooltipId) {\n\t\t\t\tthis.currentTooltip.set(null)\n\t\t\t\tthis.destroyTimeoutId = null\n\t\t\t}\n\t\t}\n\n\t\tif (editor && !instant) {\n\t\t\t// Start destroy timeout (1 second)\n\t\t\tthis.destroyTimeoutId = editor.timers.setTimeout(hide, 300)\n\t\t} else {\n\t\t\thide()\n\t\t}\n\t}\n\n\thideAllTooltips() {\n\t\tthis.currentTooltip.set(null)\n\t\tthis.destroyTimeoutId = null\n\t}\n\n\tgetCurrentTooltipData() {\n\t\tconst currentTooltip = this.currentTooltip.get()\n\t\tif (!currentTooltip) return null\n\t\tif (!this.supportsHover() && !currentTooltip.showOnMobile) return null\n\t\treturn currentTooltip\n\t}\n\n\tprivate supportsHoverAtom: Atom<boolean> | null = null\n\tsupportsHover() {\n\t\tif (!this.supportsHoverAtom) {\n\t\t\tconst mediaQuery = window.matchMedia('(hover: hover)')\n\t\t\tconst supportsHover = atom('has hover', mediaQuery.matches)\n\t\t\tthis.supportsHoverAtom = supportsHover\n\t\t\tmediaQuery.addEventListener('change', (e) => {\n\t\t\t\tsupportsHover.set(e.matches)\n\t\t\t})\n\t\t}\n\t\treturn this.supportsHoverAtom.get()\n\t}\n}\n\nexport const tooltipManager = TooltipManager.getInstance()\n\n// Context for the tooltip singleton\nconst TooltipSingletonContext = createContext<boolean>(false)\n\n/** @public */\nexport interface TldrawUiTooltipProviderProps {\n\tchildren: React.ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiTooltipProvider({ children }: TldrawUiTooltipProviderProps) {\n\treturn (\n\t\t<_Tooltip.Provider skipDelayDuration={700}>\n\t\t\t<TooltipSingletonContext.Provider value={true}>\n\t\t\t\t{children}\n\t\t\t\t<TooltipSingleton />\n\t\t\t</TooltipSingletonContext.Provider>\n\t\t</_Tooltip.Provider>\n\t)\n}\n\n// The singleton tooltip component that renders once\nfunction TooltipSingleton() {\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst triggerRef = useRef<HTMLDivElement>(null)\n\tconst isFirstShowRef = useRef(true)\n\tconst editor = useMaybeEditor()\n\n\tconst currentTooltip = useValue(\n\t\t'current tooltip',\n\t\t() => tooltipManager.getCurrentTooltipData(),\n\t\t[]\n\t)\n\n\tconst cameraState = useValue('camera state', () => editor?.getCameraState(), [editor])\n\n\t// Hide tooltip when camera is moving (panning/zooming)\n\tuseEffect(() => {\n\t\tif (cameraState === 'moving' && isOpen && currentTooltip) {\n\t\t\ttooltipManager.hideTooltip(editor, currentTooltip.id, true)\n\t\t}\n\t}, [cameraState, isOpen, currentTooltip, editor])\n\n\tuseEffect(() => {\n\t\tfunction handleKeyDown(event: KeyboardEvent) {\n\t\t\tif (event.key === 'Escape' && currentTooltip && isOpen) {\n\t\t\t\ttooltipManager.hideTooltip(editor, currentTooltip.id)\n\t\t\t\tevent.stopPropagation()\n\t\t\t}\n\t\t}\n\n\t\tdocument.addEventListener('keydown', handleKeyDown, { capture: true })\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', handleKeyDown, { capture: true })\n\t\t}\n\t}, [editor, currentTooltip, isOpen])\n\n\t// Update open state and trigger position\n\tuseEffect(() => {\n\t\tlet timer: ReturnType<typeof setTimeout> | null = null\n\t\tif (currentTooltip && triggerRef.current) {\n\t\t\t// Position the invisible trigger element over the active element\n\t\t\tconst activeRect = currentTooltip.targetElement.getBoundingClientRect()\n\t\t\tconst trigger = triggerRef.current\n\n\t\t\ttrigger.style.position = 'fixed'\n\t\t\ttrigger.style.left = `${activeRect.left}px`\n\t\t\ttrigger.style.top = `${activeRect.top}px`\n\t\t\ttrigger.style.width = `${activeRect.width}px`\n\t\t\ttrigger.style.height = `${activeRect.height}px`\n\t\t\ttrigger.style.pointerEvents = 'none'\n\t\t\ttrigger.style.zIndex = '9999'\n\n\t\t\t// Handle delay for first show\n\t\t\tif (isFirstShowRef.current) {\n\t\t\t\t// eslint-disable-next-line no-restricted-globals\n\t\t\t\ttimer = setTimeout(() => {\n\t\t\t\t\tsetIsOpen(true)\n\t\t\t\t\tisFirstShowRef.current = false\n\t\t\t\t}, currentTooltip.delayDuration)\n\t\t\t} else {\n\t\t\t\t// Subsequent tooltips show immediately\n\t\t\t\tsetIsOpen(true)\n\t\t\t}\n\t\t} else {\n\t\t\t// Hide tooltip immediately\n\t\t\tsetIsOpen(false)\n\t\t\t// Reset first show state after tooltip is hidden\n\t\t\tisFirstShowRef.current = true\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (timer !== null) {\n\t\t\t\tclearTimeout(timer)\n\t\t\t}\n\t\t}\n\t}, [currentTooltip])\n\n\tif (!currentTooltip) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<_Tooltip.Root open={isOpen} delayDuration={0}>\n\t\t\t<_Tooltip.Trigger asChild>\n\t\t\t\t<div ref={triggerRef} />\n\t\t\t</_Tooltip.Trigger>\n\t\t\t<_Tooltip.Content\n\t\t\t\tclassName=\"tlui-tooltip\"\n\t\t\t\tside={currentTooltip.side}\n\t\t\t\tsideOffset={currentTooltip.sideOffset}\n\t\t\t\tavoidCollisions\n\t\t\t\tcollisionPadding={8}\n\t\t\t\tdir=\"ltr\"\n\t\t\t>\n\t\t\t\t{currentTooltip.content}\n\t\t\t\t<_Tooltip.Arrow className=\"tlui-tooltip__arrow\" />\n\t\t\t</_Tooltip.Content>\n\t\t</_Tooltip.Root>\n\t)\n}\n\n/** @public @react */\nexport const TldrawUiTooltip = forwardRef<HTMLButtonElement, TldrawUiTooltipProps>(\n\t(\n\t\t{\n\t\t\tchildren,\n\t\t\tcontent,\n\t\t\tside,\n\t\t\tsideOffset = 5,\n\t\t\tdisabled = false,\n\t\t\tshowOnMobile = false,\n\t\t\tdelayDuration,\n\t\t},\n\t\tref\n\t) => {\n\t\tconst editor = useMaybeEditor()\n\t\tconst tooltipId = useRef<string>(uniqueId())\n\t\tconst hasProvider = useContext(TooltipSingletonContext)\n\t\tconst enhancedA11yMode = useValue(\n\t\t\t'enhancedA11yMode',\n\t\t\t() => editor?.user.getEnhancedA11yMode(),\n\t\t\t[editor]\n\t\t)\n\n\t\tconst orientationCtx = useTldrawUiOrientation()\n\t\tconst sideToUse = side ?? orientationCtx.tooltipSide\n\n\t\tuseEffect(() => {\n\t\t\tconst currentTooltipId = tooltipId.current\n\t\t\treturn () => {\n\t\t\t\tif (hasProvider) {\n\t\t\t\t\ttooltipManager.hideTooltip(editor, currentTooltipId, true)\n\t\t\t\t}\n\t\t\t}\n\t\t}, [editor, hasProvider])\n\n\t\tuseLayoutEffect(() => {\n\t\t\tif (hasProvider && tooltipManager.getCurrentTooltipData()?.id === tooltipId.current) {\n\t\t\t\ttooltipManager.updateCurrentTooltip(tooltipId.current, (tooltip) => ({\n\t\t\t\t\t...tooltip,\n\t\t\t\t\tcontent,\n\t\t\t\t\tside: sideToUse,\n\t\t\t\t\tsideOffset,\n\t\t\t\t\tshowOnMobile,\n\t\t\t\t}))\n\t\t\t}\n\t\t}, [content, sideToUse, sideOffset, showOnMobile, hasProvider])\n\n\t\t// Don't show tooltip if disabled, no content, or enhanced accessibility mode is disabled\n\t\tif (disabled || !content) {\n\t\t\treturn <>{children}</>\n\t\t}\n\n\t\tlet delayDurationToUse\n\t\tif (enhancedA11yMode) {\n\t\t\tdelayDurationToUse = 0\n\t\t} else {\n\t\t\tdelayDurationToUse =\n\t\t\t\tdelayDuration ?? (editor?.options.tooltipDelayMs || DEFAULT_TOOLTIP_DELAY_MS)\n\t\t}\n\n\t\t// Fallback to old behavior if no provider\n\t\tif (!hasProvider || enhancedA11yMode) {\n\t\t\treturn (\n\t\t\t\t<_Tooltip.Root\n\t\t\t\t\tdelayDuration={delayDurationToUse}\n\t\t\t\t\tdisableHoverableContent={!enhancedA11yMode}\n\t\t\t\t>\n\t\t\t\t\t<_Tooltip.Trigger asChild ref={ref}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</_Tooltip.Trigger>\n\t\t\t\t\t<_Tooltip.Content\n\t\t\t\t\t\tclassName=\"tlui-tooltip\"\n\t\t\t\t\t\tside={sideToUse}\n\t\t\t\t\t\tsideOffset={sideOffset}\n\t\t\t\t\t\tavoidCollisions\n\t\t\t\t\t\tcollisionPadding={8}\n\t\t\t\t\t\tdir=\"ltr\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t\t<_Tooltip.Arrow className=\"tlui-tooltip__arrow\" />\n\t\t\t\t\t</_Tooltip.Content>\n\t\t\t\t</_Tooltip.Root>\n\t\t\t)\n\t\t}\n\n\t\tconst child = React.Children.only(children)\n\t\tassert(React.isValidElement(child), 'TldrawUiTooltip children must be a single element')\n\n\t\tconst handleMouseEnter = (event: React.MouseEvent<HTMLElement>) => {\n\t\t\tchild.props.onMouseEnter?.(event)\n\t\t\ttooltipManager.showTooltip(\n\t\t\t\ttooltipId.current,\n\t\t\t\tcontent,\n\t\t\t\tevent.currentTarget as HTMLElement,\n\t\t\t\tsideToUse,\n\t\t\t\tsideOffset,\n\t\t\t\tshowOnMobile,\n\t\t\t\tdelayDurationToUse\n\t\t\t)\n\t\t}\n\n\t\tconst handleMouseLeave = (event: React.MouseEvent<HTMLElement>) => {\n\t\t\tchild.props.onMouseLeave?.(event)\n\t\t\ttooltipManager.hideTooltip(editor, tooltipId.current)\n\t\t}\n\n\t\tconst handleFocus = (event: React.FocusEvent<HTMLElement>) => {\n\t\t\tchild.props.onFocus?.(event)\n\t\t\ttooltipManager.showTooltip(\n\t\t\t\ttooltipId.current,\n\t\t\t\tcontent,\n\t\t\t\tevent.currentTarget as HTMLElement,\n\t\t\t\tsideToUse,\n\t\t\t\tsideOffset,\n\t\t\t\tshowOnMobile,\n\t\t\t\tdelayDurationToUse\n\t\t\t)\n\t\t}\n\n\t\tconst handleBlur = (event: React.FocusEvent<HTMLElement>) => {\n\t\t\tchild.props.onBlur?.(event)\n\t\t\ttooltipManager.hideTooltip(editor, tooltipId.current)\n\t\t}\n\n\t\tconst childrenWithHandlers = React.cloneElement(children as React.ReactElement, {\n\t\t\tonMouseEnter: handleMouseEnter,\n\t\t\tonMouseLeave: handleMouseLeave,\n\t\t\tonFocus: handleFocus,\n\t\t\tonBlur: handleBlur,\n\t\t})\n\n\t\treturn childrenWithHandlers\n\t}\n)\n"],"names":[],"mappings":";;;;;;;;AA+IG,SA8JO,UA5JN,KAFD;;;;;AA/IH,SAAS,QAAc,MAAc,UAAU,gBAAgB,gBAAgB;AAC/E,SAAS,WAAW,gBAAgB;AACpC,OAAO;AAUP,SAAS,8BAA8B;;;;;;AAEvC,MAAM,2BAA2B;AAwBjC,MAAM,eAAe;IACpB,OAAe,WAAkC,KAAA;IACzC,qBAAiB,kKAAA,EAA4B,mBAAmB,IAAI,EAAA;IACpE,mBAAkC,KAAA;IAE1C,OAAO,cAA8B;QACpC,IAAI,CAAC,eAAe,QAAA,EAAU;YAC7B,eAAe,QAAA,GAAW,IAAI,eAAe;QAC9C;QACA,OAAO,eAAe,QAAA;IACvB;IAEA,YACC,SAAA,EACA,OAAA,EACA,aAAA,EACA,IAAA,EACA,UAAA,EACA,YAAA,EACA,aAAA,EACC;QAED,IAAI,IAAA,CAAK,gBAAA,EAAkB;YAC1B,aAAa,IAAA,CAAK,gBAAgB;YAClC,IAAA,CAAK,gBAAA,GAAmB;QACzB;QAGA,IAAA,CAAK,cAAA,CAAe,GAAA,CAAI;YACvB,IAAI;YACJ;YACA;YACA;YACA;YACA;YACA;QACD,CAAC;IACF;IAEA,qBAAqB,SAAA,EAAmB,MAAA,EAAqD;QAC5F,IAAA,CAAK,cAAA,CAAe,MAAA,CAAO,CAAC,YAAY;YACvC,IAAI,SAAS,OAAO,WAAW;gBAC9B,OAAO,OAAO,OAAO;YACtB;YACA,OAAO;QACR,CAAC;IACF;IAEA,YAAY,MAAA,EAAuB,SAAA,EAAmB,UAAmB,KAAA,EAAO;QAC/E,MAAM,OAAO,MAAM;YAElB,IAAI,IAAA,CAAK,cAAA,CAAe,GAAA,CAAI,GAAG,OAAO,WAAW;gBAChD,IAAA,CAAK,cAAA,CAAe,GAAA,CAAI,IAAI;gBAC5B,IAAA,CAAK,gBAAA,GAAmB;YACzB;QACD;QAEA,IAAI,UAAU,CAAC,SAAS;YAEvB,IAAA,CAAK,gBAAA,GAAmB,OAAO,MAAA,CAAO,UAAA,CAAW,MAAM,GAAG;QAC3D,OAAO;YACN,KAAK;QACN;IACD;IAEA,kBAAkB;QACjB,IAAA,CAAK,cAAA,CAAe,GAAA,CAAI,IAAI;QAC5B,IAAA,CAAK,gBAAA,GAAmB;IACzB;IAEA,wBAAwB;QACvB,MAAM,iBAAiB,IAAA,CAAK,cAAA,CAAe,GAAA,CAAI;QAC/C,IAAI,CAAC,eAAgB,CAAA,OAAO;QAC5B,IAAI,CAAC,IAAA,CAAK,aAAA,CAAc,KAAK,CAAC,eAAe,YAAA,CAAc,CAAA,OAAO;QAClE,OAAO;IACR;IAEQ,oBAA0C,KAAA;IAClD,gBAAgB;QACf,IAAI,CAAC,IAAA,CAAK,iBAAA,EAAmB;YAC5B,MAAM,aAAa,OAAO,UAAA,CAAW,gBAAgB;YACrD,MAAM,oBAAgB,kKAAA,EAAK,aAAa,WAAW,OAAO;YAC1D,IAAA,CAAK,iBAAA,GAAoB;YACzB,WAAW,gBAAA,CAAiB,UAAU,CAAC,MAAM;gBAC5C,cAAc,GAAA,CAAI,EAAE,OAAO;YAC5B,CAAC;QACF;QACA,OAAO,IAAA,CAAK,iBAAA,CAAkB,GAAA,CAAI;IACnC;AACD;AAEO,MAAM,iBAAiB,eAAe,WAAA,CAAY;AAGzD,MAAM,8BAA0B,sNAAA,EAAuB,KAAK;AAQrD,SAAS,wBAAwB,EAAE,QAAA,CAAS,CAAA,EAAiC;IACnF,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,QAAA,EAAT;QAAkB,mBAAmB;QACrC,UAAA,aAAA,GAAA,IAAA,+NAAA,EAAC,wBAAwB,QAAA,EAAxB;YAAiC,OAAO;YACvC,UAAA;gBAAA;gBACD,aAAA,GAAA,IAAA,8NAAA,EAAC,kBAAA,CAAA,CAAiB;aAAA;QAAA,CACnB;IAAA,CACD;AAEF;AAGA,SAAS,mBAAmB;IAC3B,MAAM,CAAC,QAAQ,SAAS,CAAA,OAAI,iNAAA,EAAS,KAAK;IAC1C,MAAM,iBAAa,+MAAA,EAAuB,IAAI;IAC9C,MAAM,qBAAiB,+MAAA,EAAO,IAAI;IAClC,MAAM,aAAS,iMAAA,CAAe;IAE9B,MAAM,qBAAiB,+KAAA,EACtB,mBACA,IAAM,eAAe,qBAAA,CAAsB,GAC3C,CAAC,CAAA;IAGF,MAAM,kBAAc,+KAAA,EAAS,gBAAgB,IAAM,QAAQ,eAAe,GAAG;QAAC,MAAM;KAAC;IAGrF,IAAA,kNAAA,EAAU,MAAM;QACf,IAAI,gBAAgB,YAAY,UAAU,gBAAgB;YACzD,eAAe,WAAA,CAAY,QAAQ,eAAe,EAAA,EAAI,IAAI;QAC3D;IACD,GAAG;QAAC;QAAa;QAAQ;QAAgB,MAAM;KAAC;IAEhD,IAAA,kNAAA,EAAU,MAAM;QACf,SAAS,cAAc,KAAA,EAAsB;YAC5C,IAAI,MAAM,GAAA,KAAQ,YAAY,kBAAkB,QAAQ;gBACvD,eAAe,WAAA,CAAY,QAAQ,eAAe,EAAE;gBACpD,MAAM,eAAA,CAAgB;YACvB;QACD;QAEA,SAAS,gBAAA,CAAiB,WAAW,eAAe;YAAE,SAAS;QAAK,CAAC;QACrE,OAAO,MAAM;YACZ,SAAS,mBAAA,CAAoB,WAAW,eAAe;gBAAE,SAAS;YAAK,CAAC;QACzE;IACD,GAAG;QAAC;QAAQ;QAAgB,MAAM;KAAC;IAGnC,IAAA,kNAAA,EAAU,MAAM;QACf,IAAI,QAA8C;QAClD,IAAI,kBAAkB,WAAW,OAAA,EAAS;YAEzC,MAAM,aAAa,eAAe,aAAA,CAAc,qBAAA,CAAsB;YACtE,MAAM,UAAU,WAAW,OAAA;YAE3B,QAAQ,KAAA,CAAM,QAAA,GAAW;YACzB,QAAQ,KAAA,CAAM,IAAA,GAAO,GAAG,WAAW,IAAI,CAAA,EAAA,CAAA;YACvC,QAAQ,KAAA,CAAM,GAAA,GAAM,GAAG,WAAW,GAAG,CAAA,EAAA,CAAA;YACrC,QAAQ,KAAA,CAAM,KAAA,GAAQ,GAAG,WAAW,KAAK,CAAA,EAAA,CAAA;YACzC,QAAQ,KAAA,CAAM,MAAA,GAAS,GAAG,WAAW,MAAM,CAAA,EAAA,CAAA;YAC3C,QAAQ,KAAA,CAAM,aAAA,GAAgB;YAC9B,QAAQ,KAAA,CAAM,MAAA,GAAS;YAGvB,IAAI,eAAe,OAAA,EAAS;gBAE3B,QAAQ,WAAW,MAAM;oBACxB,UAAU,IAAI;oBACd,eAAe,OAAA,GAAU;gBAC1B,GAAG,eAAe,aAAa;YAChC,OAAO;gBAEN,UAAU,IAAI;YACf;QACD,OAAO;YAEN,UAAU,KAAK;YAEf,eAAe,OAAA,GAAU;QAC1B;QAEA,OAAO,MAAM;YACZ,IAAI,UAAU,MAAM;gBACnB,aAAa,KAAK;YACnB;QACD;IACD,GAAG;QAAC,cAAc;KAAC;IAEnB,IAAI,CAAC,gBAAgB;QACpB,OAAO;IACR;IAEA,OACC,aAAA,GAAA,IAAA,+NAAA,EAAC,iNAAA,CAAS,IAAA,EAAT;QAAc,MAAM;QAAQ,eAAe;QAC3C,UAAA;YAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,OAAA,EAAT;gBAAiB,SAAO;gBACxB,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;oBAAI,KAAK;gBAAA,CAAY;YAAA,CACvB;YACA,aAAA,GAAA,IAAA,+NAAA,EAAC,iNAAA,CAAS,OAAA,EAAT;gBACA,WAAU;gBACV,MAAM,eAAe,IAAA;gBACrB,YAAY,eAAe,UAAA;gBAC3B,iBAAe;gBACf,kBAAkB;gBAClB,KAAI;gBAEH,UAAA;oBAAA,eAAe,OAAA;oBAChB,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,KAAA,EAAT;wBAAe,WAAU;oBAAA,CAAsB;iBAAA;YAAA;SACjD;IAAA,CACD;AAEF;AAGO,MAAM,sBAAkB,mNAAA,EAC9B,CACC,EACC,QAAA,EACA,OAAA,EACA,IAAA,EACA,aAAa,CAAA,EACb,WAAW,KAAA,EACX,eAAe,KAAA,EACf,aAAA,EACD,EACA,QACI;IACJ,MAAM,aAAS,iMAAA,CAAe;IAC9B,MAAM,gBAAY,+MAAA,MAAe,sKAAA,CAAS,CAAC;IAC3C,MAAM,kBAAc,mNAAA,EAAW,uBAAuB;IACtD,MAAM,uBAAmB,+KAAA,EACxB,oBACA,IAAM,QAAQ,KAAK,oBAAoB,GACvC;QAAC,MAAM;KAAA;IAGR,MAAM,qBAAiB,mNAAA,CAAuB;IAC9C,MAAM,YAAY,QAAQ,eAAe,WAAA;IAEzC,IAAA,kNAAA,EAAU,MAAM;QACf,MAAM,mBAAmB,UAAU,OAAA;QACnC,OAAO,MAAM;YACZ,IAAI,aAAa;gBAChB,eAAe,WAAA,CAAY,QAAQ,kBAAkB,IAAI;YAC1D;QACD;IACD,GAAG;QAAC;QAAQ,WAAW;KAAC;IAExB,IAAA,wNAAA,EAAgB,MAAM;QACrB,IAAI,eAAe,eAAe,qBAAA,CAAsB,GAAG,OAAO,UAAU,OAAA,EAAS;YACpF,eAAe,oBAAA,CAAqB,UAAU,OAAA,EAAS,CAAC,UAAA,CAAa;oBACpE,GAAG,OAAA;oBACH;oBACA,MAAM;oBACN;oBACA;gBACD,CAAA,CAAE;QACH;IACD,GAAG;QAAC;QAAS;QAAW;QAAY;QAAc,WAAW;KAAC;IAG9D,IAAI,YAAY,CAAC,SAAS;QACzB,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAA,mOAAA,EAAA;YAAG;QAAA,CAAS;IACpB;IAEA,IAAI;IACJ,IAAI,kBAAkB;QACrB,qBAAqB;IACtB,OAAO;QACN,qBACC,iBAAA,CAAkB,QAAQ,QAAQ,kBAAkB,wBAAA;IACtD;IAGA,IAAI,CAAC,eAAe,kBAAkB;QACrC,OACC,aAAA,GAAA,IAAA,+NAAA,EAAC,iNAAA,CAAS,IAAA,EAAT;YACA,eAAe;YACf,yBAAyB,CAAC;YAE1B,UAAA;gBAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,OAAA,EAAT;oBAAiB,SAAO;oBAAC;oBACxB;gBAAA,CACF;gBACA,aAAA,GAAA,IAAA,+NAAA,EAAC,iNAAA,CAAS,OAAA,EAAT;oBACA,WAAU;oBACV,MAAM;oBACN;oBACA,iBAAe;oBACf,kBAAkB;oBAClB,KAAI;oBAEH,UAAA;wBAAA;wBACD,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,KAAA,EAAT;4BAAe,WAAU;wBAAA,CAAsB;qBAAA;gBAAA;aACjD;QAAA;IAGH;IAEA,MAAM,QAAQ,gNAAA,CAAM,QAAA,CAAS,IAAA,CAAK,QAAQ;IAC1C,IAAA,oKAAA,EAAO,gNAAA,CAAM,cAAA,CAAe,KAAK,GAAG,mDAAmD;IAEvF,MAAM,mBAAmB,CAAC,UAAyC;QAClE,MAAM,KAAA,CAAM,YAAA,GAAe,KAAK;QAChC,eAAe,WAAA,CACd,UAAU,OAAA,EACV,SACA,MAAM,aAAA,EACN,WACA,YACA,cACA;IAEF;IAEA,MAAM,mBAAmB,CAAC,UAAyC;QAClE,MAAM,KAAA,CAAM,YAAA,GAAe,KAAK;QAChC,eAAe,WAAA,CAAY,QAAQ,UAAU,OAAO;IACrD;IAEA,MAAM,cAAc,CAAC,UAAyC;QAC7D,MAAM,KAAA,CAAM,OAAA,GAAU,KAAK;QAC3B,eAAe,WAAA,CACd,UAAU,OAAA,EACV,SACA,MAAM,aAAA,EACN,WACA,YACA,cACA;IAEF;IAEA,MAAM,aAAa,CAAC,UAAyC;QAC5D,MAAM,KAAA,CAAM,MAAA,GAAS,KAAK;QAC1B,eAAe,WAAA,CAAY,QAAQ,UAAU,OAAO;IACrD;IAEA,MAAM,uBAAuB,gNAAA,CAAM,YAAA,CAAa,UAAgC;QAC/E,cAAc;QACd,cAAc;QACd,SAAS;QACT,QAAQ;IACT,CAAC;IAED,OAAO;AACR","debugId":null}},
    {"offset": {"line": 1050, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/TldrawUiToolbar.tsx"],"sourcesContent":["import classnames from 'classnames'\nimport { Toolbar as _Toolbar } from 'radix-ui'\nimport React from 'react'\nimport { TldrawUiColumn, TldrawUiGrid, TldrawUiRow } from './layout'\nimport { TldrawUiTooltip } from './TldrawUiTooltip'\n\n/** @public */\nexport interface TLUiToolbarProps extends React.HTMLAttributes<HTMLDivElement> {\n\tchildren?: React.ReactNode\n\tclassName?: string\n\tdir?: 'ltr' | 'rtl'\n\tlabel: string\n\torientation?: 'horizontal' | 'vertical' | 'grid'\n\ttooltipSide?: 'top' | 'right' | 'bottom' | 'left'\n}\n\nconst LayoutByOrientation = {\n\thorizontal: TldrawUiRow,\n\tvertical: TldrawUiColumn,\n\tgrid: TldrawUiGrid,\n}\n\n/** @public @react */\nexport const TldrawUiToolbar = React.forwardRef<HTMLDivElement, TLUiToolbarProps>(\n\t(\n\t\t{\n\t\t\tchildren,\n\t\t\tclassName,\n\t\t\tlabel,\n\t\t\torientation = 'horizontal',\n\t\t\ttooltipSide,\n\t\t\t...props\n\t\t}: TLUiToolbarProps,\n\t\tref\n\t) => {\n\t\tconst Layout = LayoutByOrientation[orientation]\n\t\treturn (\n\t\t\t<Layout asChild tooltipSide={tooltipSide}>\n\t\t\t\t<_Toolbar.Root\n\t\t\t\t\tref={ref}\n\t\t\t\t\t{...props}\n\t\t\t\t\tclassName={classnames('tlui-toolbar', className)}\n\t\t\t\t\taria-label={label}\n\t\t\t\t\torientation={orientation === 'grid' ? 'horizontal' : orientation}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</_Toolbar.Root>\n\t\t\t</Layout>\n\t\t)\n\t}\n)\n\n/** @public */\nexport interface TLUiToolbarButtonProps extends React.HTMLAttributes<HTMLButtonElement> {\n\tasChild?: boolean\n\tchildren?: React.ReactNode\n\tclassName?: string\n\tdisabled?: boolean\n\tisActive?: boolean\n\ttype: 'icon' | 'tool' | 'menu'\n\ttooltip?: string\n}\n\n/** @public @react */\nexport const TldrawUiToolbarButton = React.forwardRef<HTMLButtonElement, TLUiToolbarButtonProps>(\n\t({ asChild, children, type, isActive, tooltip, ...props }: TLUiToolbarButtonProps, ref) => {\n\t\tconst button = (\n\t\t\t<_Toolbar.Button\n\t\t\t\tref={ref}\n\t\t\t\tasChild={asChild}\n\t\t\t\tdraggable={false}\n\t\t\t\tdata-isactive={isActive}\n\t\t\t\t{...props}\n\t\t\t\taria-label={props.title}\n\t\t\t\t// The tooltip takes care of this.\n\t\t\t\ttitle={undefined}\n\t\t\t\tclassName={classnames('tlui-button', `tlui-button__${type}`, props.className)}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</_Toolbar.Button>\n\t\t)\n\n\t\tconst tooltipContent = tooltip || props.title\n\n\t\treturn <TldrawUiTooltip content={tooltipContent}>{button}</TldrawUiTooltip>\n\t}\n)\n\n/** @public */\nexport interface TLUiToolbarToggleGroupProps extends React.HTMLAttributes<HTMLDivElement> {\n\tchildren?: React.ReactNode\n\tclassName?: string\n\tdir?: 'ltr' | 'rtl'\n\tvalue: any\n\t// TODO: fix up this type later\n\tdefaultValue?: any\n\ttype: 'single' | 'multiple'\n\tasChild?: boolean\n}\n\n/** @public @react */\nexport const TldrawUiToolbarToggleGroup = ({\n\tchildren,\n\tclassName,\n\ttype,\n\tasChild,\n\t...props\n}: TLUiToolbarToggleGroupProps) => {\n\treturn (\n\t\t<_Toolbar.ToggleGroup\n\t\t\tasChild={asChild}\n\t\t\ttype={type}\n\t\t\t{...props}\n\t\t\t// TODO: this fixes a bug in Radix until they fix it.\n\t\t\t// https://github.com/radix-ui/primitives/issues/3188\n\t\t\t// https://github.com/radix-ui/primitives/pull/3189\n\t\t\trole=\"radiogroup\"\n\t\t\tclassName={classnames('tlui-toolbar-toggle-group', className)}\n\t\t>\n\t\t\t{children}\n\t\t</_Toolbar.ToggleGroup>\n\t)\n}\n\n/** @public */\nexport interface TLUiToolbarToggleItemProps extends React.HTMLAttributes<HTMLButtonElement> {\n\tchildren?: React.ReactNode\n\tclassName?: string\n\ttype: 'icon' | 'tool'\n\tvalue: string\n\ttooltip?: React.ReactNode\n}\n\n/** @public @react */\nexport const TldrawUiToolbarToggleItem = ({\n\tchildren,\n\tclassName,\n\ttype,\n\tvalue,\n\ttooltip,\n\t...props\n}: TLUiToolbarToggleItemProps) => {\n\tconst toggleItem = (\n\t\t<_Toolbar.ToggleItem\n\t\t\t{...props}\n\t\t\t// The tooltip takes care of this.\n\t\t\ttitle={undefined}\n\t\t\tclassName={classnames(\n\t\t\t\t'tlui-button',\n\t\t\t\t`tlui-button__${type}`,\n\t\t\t\t'tlui-toolbar-toggle-group-item',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\tvalue={value}\n\t\t>\n\t\t\t{children}\n\t\t</_Toolbar.ToggleItem>\n\t)\n\n\tconst tooltipContent = tooltip || props.title\n\n\treturn <TldrawUiTooltip content={tooltipContent}>{toggleItem}</TldrawUiTooltip>\n}\n"],"names":[],"mappings":";;;;;;;;;;AAsCI;AAtCJ,OAAO,gBAAgB;AACvB,SAAS,WAAW,gBAAgB;AACpC,OAAO,WAAW;AAClB,SAAS,gBAAgB,cAAc,mBAAmB;AAC1D,SAAS,uBAAuB;;;;;;;AAYhC,MAAM,sBAAsB;IAC3B,YAAY,wMAAA;IACZ,UAAU,2MAAA;IACV,MAAM,yMAAA;AACP;AAGO,MAAM,kBAAkB,gNAAA,CAAM,UAAA,CACpC,CACC,EACC,QAAA,EACA,SAAA,EACA,KAAA,EACA,cAAc,YAAA,EACd,WAAA,EACA,GAAG,OACJ,EACA,QACI;IACJ,MAAM,SAAS,mBAAA,CAAoB,WAAW,CAAA;IAC9C,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,QAAA;QAAO,SAAO;QAAC;QACf,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,IAAA,EAAT;YACA;YACC,GAAG,KAAA;YACJ,eAAW,8IAAA,EAAW,gBAAgB,SAAS;YAC/C,cAAY;YACZ,aAAa,gBAAgB,SAAS,eAAe;YAEpD;QAAA;IACF,CACD;AAEF;AAeM,MAAM,wBAAwB,gNAAA,CAAM,UAAA,CAC1C,CAAC,EAAE,OAAA,EAAS,QAAA,EAAU,IAAA,EAAM,QAAA,EAAU,OAAA,EAAS,GAAG,MAAM,CAAA,EAA2B,QAAQ;IAC1F,MAAM,SACL,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,MAAA,EAAT;QACA;QACA;QACA,WAAW;QACX,iBAAe;QACd,GAAG,KAAA;QACJ,cAAY,MAAM,KAAA;QAElB,OAAO,KAAA;QACP,eAAW,8IAAA,EAAW,eAAe,CAAA,aAAA,EAAgB,IAAI,EAAA,EAAI,MAAM,SAAS;QAE3E;IAAA;IAIH,MAAM,iBAAiB,WAAW,MAAM,KAAA;IAExC,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,qNAAA,EAAA;QAAgB,SAAS;QAAiB,UAAA;IAAA,CAAO;AAC1D;AAgBM,MAAM,6BAA6B,CAAC,EAC1C,QAAA,EACA,SAAA,EACA,IAAA,EACA,OAAA,EACA,GAAG,OACJ,KAAmC;IAClC,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,WAAA,EAAT;QACA;QACA;QACC,GAAG,KAAA;QAIJ,MAAK;QACL,eAAW,8IAAA,EAAW,6BAA6B,SAAS;QAE3D;IAAA;AAGJ;AAYO,MAAM,4BAA4B,CAAC,EACzC,QAAA,EACA,SAAA,EACA,IAAA,EACA,KAAA,EACA,OAAA,EACA,GAAG,OACJ,KAAkC;IACjC,MAAM,aACL,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,UAAA,EAAT;QACC,GAAG,KAAA;QAEJ,OAAO,KAAA;QACP,eAAW,8IAAA,EACV,eACA,CAAA,aAAA,EAAgB,IAAI,EAAA,EACpB,kCACA;QAED;QAEC;IAAA;IAIH,MAAM,iBAAiB,WAAW,MAAM,KAAA;IAExC,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,qNAAA,EAAA;QAAgB,SAAS;QAAiB,UAAA;IAAA,CAAW;AAC9D","debugId":null}},
    {"offset": {"line": 1140, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/menus/TldrawUiMenuItem.tsx"],"sourcesContent":["import {\n\texhaustiveSwitchError,\n\tgetPointerInfo,\n\tpreventDefault,\n\tTLPointerEventInfo,\n\tuseEditor,\n\tVec,\n\tVecModel,\n} from '@tldraw/editor'\nimport { ContextMenu as _ContextMenu } from 'radix-ui'\nimport { useMemo, useState } from 'react'\nimport { unwrapLabel } from '../../../context/actions'\nimport { TLUiEventSource } from '../../../context/events'\nimport { useReadonly } from '../../../hooks/useReadonly'\nimport { TLUiToolItem } from '../../../hooks/useTools'\nimport { TLUiTranslationKey } from '../../../hooks/useTranslation/TLUiTranslationKey'\nimport { useTranslation } from '../../../hooks/useTranslation/useTranslation'\nimport { kbdStr } from '../../../kbd-utils'\nimport { Spinner } from '../../Spinner'\nimport { TldrawUiButton } from '../Button/TldrawUiButton'\nimport { TldrawUiButtonIcon } from '../Button/TldrawUiButtonIcon'\nimport { TldrawUiButtonLabel } from '../Button/TldrawUiButtonLabel'\nimport { TldrawUiDropdownMenuItem } from '../TldrawUiDropdownMenu'\nimport { TLUiIconJsx } from '../TldrawUiIcon'\nimport { TldrawUiKbd } from '../TldrawUiKbd'\nimport { TldrawUiToolbarButton } from '../TldrawUiToolbar'\nimport { tooltipManager } from '../TldrawUiTooltip'\nimport { useTldrawUiMenuContext } from './TldrawUiMenuContext'\n\n/** @public */\nexport interface TLUiMenuItemProps<\n\tTranslationKey extends string = string,\n\tIconType extends string = string,\n> {\n\tid: string\n\t/**\n\t * The icon to display on the item. Icons are only shown in certain menu types.\n\t */\n\ticon?: IconType | TLUiIconJsx\n\t/**\n\t * An icon to display to the left of the menu item.\n\t */\n\ticonLeft?: IconType | TLUiIconJsx\n\t/**\n\t * The keyboard shortcut to display on the item.\n\t */\n\tkbd?: string\n\t/**\n\t * The label to display on the item. If it's a string, it will be translated. If it's an object, the keys will be used as the language keys and the values will be translated.\n\t */\n\tlabel?: TranslationKey | { [key: string]: TranslationKey }\n\t/**\n\t * If the editor is in readonly mode and the item is not marked as readonlyok, it will not be rendered.\n\t */\n\treadonlyOk?: boolean\n\t/**\n\t * The function to call when the item is clicked.\n\t */\n\tonSelect(source: TLUiEventSource): Promise<void> | void\n\t/**\n\t * Whether this item should be disabled.\n\t */\n\tdisabled?: boolean\n\t/**\n\t * Prevent the menu from closing when the item is clicked\n\t */\n\tnoClose?: boolean\n\t/**\n\t * Whether to show a spinner on the item.\n\t */\n\tspinner?: boolean\n\t/**\n\t * Whether the item is selected.\n\t */\n\tisSelected?: boolean\n\t/**\n\t * The function to call when the item is dragged. If this is provided, the item will be draggable.\n\t */\n\tonDragStart?(source: TLUiEventSource, info: TLPointerEventInfo): void\n}\n\n/** @public @react */\nexport function TldrawUiMenuItem<\n\tTranslationKey extends string = string,\n\tIconType extends string = string,\n>({\n\tdisabled = false,\n\tspinner = false,\n\treadonlyOk = false,\n\tid,\n\tkbd,\n\tlabel,\n\ticon,\n\ticonLeft,\n\tonSelect,\n\tnoClose,\n\tisSelected,\n\tonDragStart,\n}: TLUiMenuItemProps<TranslationKey, IconType>) {\n\tconst { type: menuType, sourceId } = useTldrawUiMenuContext()\n\n\tconst msg = useTranslation()\n\n\tconst [disableClicks, setDisableClicks] = useState(false)\n\n\tconst isReadonlyMode = useReadonly()\n\tif (isReadonlyMode && !readonlyOk) return null\n\n\tconst labelToUse = unwrapLabel(label, menuType)\n\tconst kbdToUse = kbd ? kbdStr(kbd) : undefined\n\n\tconst labelStr = labelToUse ? msg(labelToUse as TLUiTranslationKey) : undefined\n\tconst titleStr = labelStr && kbdToUse ? `${labelStr} ${kbdToUse}` : labelStr\n\n\tswitch (menuType) {\n\t\tcase 'menu': {\n\t\t\treturn (\n\t\t\t\t<TldrawUiDropdownMenuItem>\n\t\t\t\t\t<TldrawUiButton\n\t\t\t\t\t\ttype=\"menu\"\n\t\t\t\t\t\tdata-testid={`${sourceId}.${id}`}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tif (noClose) {\n\t\t\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (disableClicks) {\n\t\t\t\t\t\t\t\tsetDisableClicks(false)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tonSelect(sourceId)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{iconLeft && <TldrawUiButtonIcon icon={iconLeft} small />}\n\t\t\t\t\t\t<TldrawUiButtonLabel>{labelStr}</TldrawUiButtonLabel>\n\t\t\t\t\t\t{kbd && <TldrawUiKbd>{kbd}</TldrawUiKbd>}\n\t\t\t\t\t</TldrawUiButton>\n\t\t\t\t</TldrawUiDropdownMenuItem>\n\t\t\t)\n\t\t}\n\t\tcase 'context-menu': {\n\t\t\t// Hide disabled context menu items\n\t\t\tif (disabled) return null\n\n\t\t\treturn (\n\t\t\t\t<_ContextMenu.Item\n\t\t\t\t\tdir=\"ltr\"\n\t\t\t\t\tdraggable={false}\n\t\t\t\t\tclassName=\"tlui-button tlui-button__menu\"\n\t\t\t\t\tdata-testid={`${sourceId}.${id}`}\n\t\t\t\t\tonSelect={(e) => {\n\t\t\t\t\t\tif (noClose) preventDefault(e)\n\t\t\t\t\t\tif (disableClicks) {\n\t\t\t\t\t\t\tsetDisableClicks(false)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tonSelect(sourceId)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"tlui-button__label\" draggable={false}>\n\t\t\t\t\t\t{labelStr}\n\t\t\t\t\t</span>\n\t\t\t\t\t{iconLeft && <TldrawUiButtonIcon icon={iconLeft} small />}\n\t\t\t\t\t{kbd && <TldrawUiKbd>{kbd}</TldrawUiKbd>}\n\t\t\t\t\t{spinner && <Spinner />}\n\t\t\t\t</_ContextMenu.Item>\n\t\t\t)\n\t\t}\n\t\tcase 'small-icons':\n\t\tcase 'icons': {\n\t\t\treturn (\n\t\t\t\t<TldrawUiToolbarButton\n\t\t\t\t\tdata-testid={`${sourceId}.${id}`}\n\t\t\t\t\ttype=\"icon\"\n\t\t\t\t\ttitle={titleStr}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tonClick={() => onSelect(sourceId)}\n\t\t\t\t>\n\t\t\t\t\t<TldrawUiButtonIcon icon={icon!} small />\n\t\t\t\t</TldrawUiToolbarButton>\n\t\t\t)\n\t\t}\n\t\tcase 'keyboard-shortcuts': {\n\t\t\tif (!kbd) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Menu item '${label}' isn't shown in the keyboard shortcuts dialog because it doesn't have a keyboard shortcut.`\n\t\t\t\t)\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div className=\"tlui-shortcuts-dialog__key-pair\" data-testid={`${sourceId}.${id}`}>\n\t\t\t\t\t<div className=\"tlui-shortcuts-dialog__key-pair__key\">{labelStr}</div>\n\t\t\t\t\t<div className=\"tlui-shortcuts-dialog__key-pair__value\">\n\t\t\t\t\t\t<TldrawUiKbd visibleOnMobileLayout>{kbd}</TldrawUiKbd>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\tcase 'helper-buttons': {\n\t\t\treturn (\n\t\t\t\t<TldrawUiButton type=\"low\" onClick={() => onSelect(sourceId)}>\n\t\t\t\t\t<TldrawUiButtonIcon icon={icon!} />\n\t\t\t\t\t<TldrawUiButtonLabel>{labelStr}</TldrawUiButtonLabel>\n\t\t\t\t</TldrawUiButton>\n\t\t\t)\n\t\t}\n\t\tcase 'toolbar': {\n\t\t\tif (onDragStart) {\n\t\t\t\treturn (\n\t\t\t\t\t<DraggableToolbarButton\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\ticon={icon}\n\t\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t\tonDragStart={onDragStart}\n\t\t\t\t\t\tlabelStr={labelStr}\n\t\t\t\t\t\ttitleStr={titleStr}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<TldrawUiToolbarButton\n\t\t\t\t\taria-label={labelStr}\n\t\t\t\t\taria-pressed={isSelected ? 'true' : 'false'}\n\t\t\t\t\tdata-testid={`tools.${id}`}\n\t\t\t\t\tdata-value={id}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tonClick={() => onSelect('toolbar')}\n\t\t\t\t\tonTouchStart={(e) => {\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t\tonSelect('toolbar')\n\t\t\t\t\t}}\n\t\t\t\t\ttitle={titleStr}\n\t\t\t\t\ttype=\"tool\"\n\t\t\t\t>\n\t\t\t\t\t<TldrawUiButtonIcon icon={icon!} />\n\t\t\t\t</TldrawUiToolbarButton>\n\t\t\t)\n\t\t}\n\t\tcase 'toolbar-overflow': {\n\t\t\tif (onDragStart) {\n\t\t\t\treturn (\n\t\t\t\t\t<DraggableToolbarButton\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\ticon={icon}\n\t\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t\tonDragStart={onDragStart}\n\t\t\t\t\t\tlabelStr={labelStr}\n\t\t\t\t\t\ttitleStr={titleStr}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t\t\toverflow\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<TldrawUiToolbarButton\n\t\t\t\t\taria-label={labelStr}\n\t\t\t\t\taria-pressed={isSelected ? 'true' : 'false'}\n\t\t\t\t\tisActive={isSelected}\n\t\t\t\t\tdata-testid={`tools.more.${id}`}\n\t\t\t\t\tdata-value={id}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tonClick={() => onSelect('toolbar')}\n\t\t\t\t\ttitle={titleStr}\n\t\t\t\t\ttype=\"icon\"\n\t\t\t\t>\n\t\t\t\t\t<TldrawUiButtonIcon icon={icon!} />\n\t\t\t\t</TldrawUiToolbarButton>\n\t\t\t)\n\t\t}\n\t\tdefault: {\n\t\t\tthrow exhaustiveSwitchError(menuType)\n\t\t}\n\t}\n}\n\nfunction useDraggableEvents(\n\tonDragStart: TLUiToolItem['onDragStart'],\n\tonSelect: TLUiToolItem['onSelect']\n) {\n\tconst editor = useEditor()\n\tconst events = useMemo(() => {\n\t\tlet state = { name: 'idle' } as\n\t\t\t| {\n\t\t\t\t\tname: 'idle'\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tname: 'pointing'\n\t\t\t\t\tscreenSpaceStart: VecModel\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tname: 'dragging'\n\t\t\t\t\tscreenSpaceStart: VecModel\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tname: 'dragged'\n\t\t\t  }\n\n\t\tfunction handlePointerDown(e: React.PointerEvent<HTMLButtonElement>) {\n\t\t\tstate = {\n\t\t\t\tname: 'pointing',\n\t\t\t\tscreenSpaceStart: { x: e.clientX, y: e.clientY },\n\t\t\t}\n\n\t\t\te.currentTarget.setPointerCapture(e.pointerId)\n\t\t}\n\n\t\tfunction handlePointerMove(e: React.PointerEvent<HTMLButtonElement>) {\n\t\t\tif ((e as any).isSpecialRedispatchedEvent) return\n\n\t\t\tif (state.name === 'pointing') {\n\t\t\t\tconst distanceSq = Vec.Dist2(state.screenSpaceStart, { x: e.clientX, y: e.clientY })\n\t\t\t\tif (\n\t\t\t\t\tdistanceSq >\n\t\t\t\t\t(editor.getInstanceState().isCoarsePointer\n\t\t\t\t\t\t? editor.options.uiCoarseDragDistanceSquared\n\t\t\t\t\t\t: editor.options.uiDragDistanceSquared)\n\t\t\t\t) {\n\t\t\t\t\tconst screenSpaceStart = state.screenSpaceStart\n\t\t\t\t\tstate = {\n\t\t\t\t\t\tname: 'dragging',\n\t\t\t\t\t\tscreenSpaceStart,\n\t\t\t\t\t}\n\n\t\t\t\t\teditor.run(() => {\n\t\t\t\t\t\teditor.setCurrentTool('select')\n\n\t\t\t\t\t\t// Set origin point\n\t\t\t\t\t\teditor.dispatch({\n\t\t\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\t\t\ttarget: 'canvas',\n\t\t\t\t\t\t\tname: 'pointer_down',\n\t\t\t\t\t\t\t...getPointerInfo(editor, e),\n\t\t\t\t\t\t\tpoint: screenSpaceStart,\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\t// Pointer down potentially selects shapes, so we need to deselect them.\n\t\t\t\t\t\teditor.selectNone()\n\n\t\t\t\t\t\t// start drag\n\t\t\t\t\t\tonDragStart?.('toolbar', {\n\t\t\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\t\t\ttarget: 'canvas',\n\t\t\t\t\t\t\tname: 'pointer_move',\n\t\t\t\t\t\t\t...getPointerInfo(editor, e),\n\t\t\t\t\t\t\tpoint: screenSpaceStart,\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\ttooltipManager.hideAllTooltips()\n\t\t\t\t\t\teditor.getContainer().focus()\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction handlePointerUp(e: React.PointerEvent<HTMLButtonElement>) {\n\t\t\tif ((e as any).isSpecialRedispatchedEvent) return\n\n\t\t\te.currentTarget.releasePointerCapture(e.pointerId)\n\n\t\t\teditor.dispatch({\n\t\t\t\ttype: 'pointer',\n\t\t\t\ttarget: 'canvas',\n\t\t\t\tname: 'pointer_up',\n\t\t\t\t...getPointerInfo(editor, e),\n\t\t\t})\n\t\t}\n\n\t\tfunction handleClick() {\n\t\t\tif (state.name === 'dragging' || state.name === 'dragged') {\n\t\t\t\tstate = { name: 'idle' }\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\tstate = { name: 'idle' }\n\t\t\tonSelect?.('toolbar')\n\t\t}\n\n\t\treturn {\n\t\t\tonPointerDown: handlePointerDown,\n\t\t\tonPointerMove: handlePointerMove,\n\t\t\tonPointerUp: handlePointerUp,\n\t\t\tonClick: handleClick,\n\t\t}\n\t}, [onDragStart, editor, onSelect])\n\n\treturn events\n}\n\nfunction DraggableToolbarButton({\n\tid,\n\tlabelStr,\n\ttitleStr,\n\tdisabled,\n\tisSelected,\n\ticon,\n\tonSelect,\n\tonDragStart,\n\toverflow,\n}: {\n\tid: string\n\tdisabled: boolean\n\tlabelStr?: string\n\ttitleStr?: string\n\tisSelected?: boolean\n\ticon: TLUiMenuItemProps['icon']\n\tonSelect: TLUiMenuItemProps['onSelect']\n\tonDragStart: TLUiMenuItemProps['onDragStart']\n\toverflow?: boolean\n}) {\n\tconst events = useDraggableEvents(onDragStart, onSelect)\n\n\tif (overflow) {\n\t\treturn (\n\t\t\t<TldrawUiToolbarButton\n\t\t\t\taria-label={labelStr}\n\t\t\t\taria-pressed={isSelected ? 'true' : 'false'}\n\t\t\t\tisActive={isSelected}\n\t\t\t\tclassName=\"tlui-button-grid__button\"\n\t\t\t\tdata-testid={`tools.more.${id}`}\n\t\t\t\tdata-value={id}\n\t\t\t\tdisabled={disabled}\n\t\t\t\ttitle={titleStr}\n\t\t\t\ttype=\"icon\"\n\t\t\t\t{...events}\n\t\t\t>\n\t\t\t\t<TldrawUiButtonIcon icon={icon!} />\n\t\t\t</TldrawUiToolbarButton>\n\t\t)\n\t}\n\n\treturn (\n\t\t<TldrawUiToolbarButton\n\t\t\taria-label={labelStr}\n\t\t\taria-pressed={isSelected ? 'true' : 'false'}\n\t\t\tdata-testid={`tools.${id}`}\n\t\t\tdata-value={id}\n\t\t\tdisabled={disabled}\n\t\t\tonTouchStart={(e) => {\n\t\t\t\tpreventDefault(e)\n\t\t\t\tonSelect('toolbar')\n\t\t\t}}\n\t\t\ttitle={titleStr}\n\t\t\ttype=\"tool\"\n\t\t\t{...events}\n\t\t>\n\t\t\t<TldrawUiButtonIcon icon={icon!} />\n\t\t</TldrawUiToolbarButton>\n\t)\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1511, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/menus/TldrawUiMenuActionItem.tsx"],"sourcesContent":["import { useActions } from '../../../context/actions'\nimport { TldrawUiMenuItem, type TLUiMenuItemProps } from './TldrawUiMenuItem'\n\n/** @public */\nexport type TLUiMenuActionItemProps = {\n\tactionId?: string\n} & Partial<Pick<TLUiMenuItemProps, 'disabled' | 'isSelected' | 'noClose' | 'onSelect'>>\n\n/** @public @react */\nexport function TldrawUiMenuActionItem({ actionId = '', ...rest }: TLUiMenuActionItemProps) {\n\tconst actions = useActions()\n\tconst action = actions[actionId]\n\tif (!action) return null\n\treturn <TldrawUiMenuItem {...action} {...rest} />\n}\n"],"names":[],"mappings":";;;;AAaQ;AAbR,SAAS,kBAAkB;AAC3B,SAAS,wBAAgD;;;;AAQlD,SAAS,uBAAuB,EAAE,WAAW,EAAA,EAAI,GAAG,KAAK,CAAA,EAA4B;IAC3F,MAAM,cAAU,uLAAA,CAAW;IAC3B,MAAM,SAAS,OAAA,CAAQ,QAAQ,CAAA;IAC/B,IAAI,CAAC,OAAQ,CAAA,OAAO;IACpB,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,gOAAA,EAAA;QAAkB,GAAG,MAAA;QAAS,GAAG,IAAA;IAAA,CAAM;AAChD","debugId":null}},
    {"offset": {"line": 1536, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/menus/TldrawUiMenuGroup.tsx"],"sourcesContent":["import classNames from 'classnames'\nimport { ReactNode } from 'react'\nimport { unwrapLabel } from '../../../context/actions'\nimport { TLUiTranslationKey } from '../../../hooks/useTranslation/TLUiTranslationKey'\nimport { useTranslation } from '../../../hooks/useTranslation/useTranslation'\nimport { TldrawUiColumn, TldrawUiGrid, TldrawUiRow, useTldrawUiOrientation } from '../layout'\nimport { TldrawUiDropdownMenuGroup } from '../TldrawUiDropdownMenu'\nimport { useTldrawUiMenuContext } from './TldrawUiMenuContext'\n\n/** @public */\nexport interface TLUiMenuGroupProps<TranslationKey extends string = string> {\n\tid: string\n\t/**\n\t * The label to display on the item. If it's a string, it will be translated. If it's an object, the keys will be used as the language keys and the values will be translated.\n\t */\n\tlabel?: TranslationKey | { [key: string]: TranslationKey }\n\tclassName?: string\n\tchildren?: ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiMenuGroup({ id, label, className, children }: TLUiMenuGroupProps) {\n\tconst menu = useTldrawUiMenuContext()\n\tconst { orientation } = useTldrawUiOrientation()\n\tconst msg = useTranslation()\n\tconst labelToUse = unwrapLabel(label, menu.type)\n\tconst labelStr = labelToUse ? msg(labelToUse as TLUiTranslationKey) : undefined\n\n\tswitch (menu.type) {\n\t\tcase 'menu': {\n\t\t\treturn (\n\t\t\t\t<TldrawUiDropdownMenuGroup\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tdata-testid={`${menu.sourceId}-group.${id}`}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</TldrawUiDropdownMenuGroup>\n\t\t\t)\n\t\t}\n\t\tcase 'context-menu': {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tdir=\"ltr\"\n\t\t\t\t\tclassName={classNames('tlui-menu__group', className)}\n\t\t\t\t\tdata-testid={`${menu.sourceId}-group.${id}`}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\tcase 'keyboard-shortcuts': {\n\t\t\t// todo: if groups need a label, let's give em a label\n\t\t\treturn (\n\t\t\t\t<div className=\"tlui-shortcuts-dialog__group\" data-testid={`${menu.sourceId}-group.${id}`}>\n\t\t\t\t\t<h2 className=\"tlui-shortcuts-dialog__group__title\">{labelStr}</h2>\n\t\t\t\t\t<div className=\"tlui-shortcuts-dialog__group__content\">{children}</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\tcase 'toolbar': {\n\t\t\tconst Layout = orientation === 'horizontal' ? TldrawUiRow : TldrawUiColumn\n\t\t\treturn (\n\t\t\t\t<Layout className=\"tlui-main-toolbar__group\" data-testid={`${menu.sourceId}-group.${id}`}>\n\t\t\t\t\t{children}\n\t\t\t\t</Layout>\n\t\t\t)\n\t\t}\n\t\tcase 'toolbar-overflow': {\n\t\t\treturn (\n\t\t\t\t<TldrawUiGrid\n\t\t\t\t\tclassName=\"tlui-main-toolbar__group\"\n\t\t\t\t\tdata-testid={`${menu.sourceId}-group.${id}`}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</TldrawUiGrid>\n\t\t\t)\n\t\t}\n\t\tdefault: {\n\t\t\treturn children\n\t\t}\n\t}\n}\n"],"names":[],"mappings":";;;;AA+BI,cAsBA,YAtBA;AA/BJ,OAAO,gBAAgB;AAEvB,SAAS,mBAAmB;AAE5B,SAAS,sBAAsB;AAC/B,SAAS,gBAAgB,cAAc,aAAa,8BAA8B;AAClF,SAAS,iCAAiC;AAC1C,SAAS,8BAA8B;;;;;;;;AAchC,SAAS,kBAAkB,EAAE,EAAA,EAAI,KAAA,EAAO,SAAA,EAAW,QAAA,CAAS,CAAA,EAAuB;IACzF,MAAM,WAAO,yOAAA,CAAuB;IACpC,MAAM,EAAE,WAAA,CAAY,CAAA,OAAI,mNAAA,CAAuB;IAC/C,MAAM,UAAM,kNAAA,CAAe;IAC3B,MAAM,iBAAa,wLAAA,EAAY,OAAO,KAAK,IAAI;IAC/C,MAAM,WAAW,aAAa,IAAI,UAAgC,IAAI,KAAA;IAEtE,OAAQ,KAAK,IAAA,EAAM;QAClB,KAAK;YAAQ;gBACZ,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,oOAAA,EAAA;oBACA;oBACA,eAAa,GAAG,KAAK,QAAQ,CAAA,OAAA,EAAU,EAAE,EAAA;oBAExC;gBAAA;YAGJ;QACA,KAAK;YAAgB;gBACpB,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;oBACA,KAAI;oBACJ,eAAW,8IAAA,EAAW,oBAAoB,SAAS;oBACnD,eAAa,GAAG,KAAK,QAAQ,CAAA,OAAA,EAAU,EAAE,EAAA;oBAExC;gBAAA;YAGJ;QACA,KAAK;YAAsB;gBAE1B,OACC,aAAA,GAAA,IAAA,+NAAA,EAAC,OAAA;oBAAI,WAAU;oBAA+B,eAAa,GAAG,KAAK,QAAQ,CAAA,OAAA,EAAU,EAAE,EAAA;oBACtF,UAAA;wBAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,MAAA;4BAAG,WAAU;4BAAuC,UAAA;wBAAA,CAAS;wBAC9D,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;4BAAI,WAAU;4BAAyC;wBAAA,CAAS;qBAAA;gBAAA,CAClE;YAEF;QACA,KAAK;YAAW;gBACf,MAAM,SAAS,gBAAgB,eAAe,wMAAA,GAAc,2MAAA;gBAC5D,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,QAAA;oBAAO,WAAU;oBAA2B,eAAa,GAAG,KAAK,QAAQ,CAAA,OAAA,EAAU,EAAE,EAAA;oBACpF;gBAAA,CACF;YAEF;QACA,KAAK;YAAoB;gBACxB,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,yMAAA,EAAA;oBACA,WAAU;oBACV,eAAa,GAAG,KAAK,QAAQ,CAAA,OAAA,EAAU,EAAE,EAAA;oBAExC;gBAAA;YAGJ;QACA;YAAS;gBACR,OAAO;YACR;IACD;AACD","debugId":null}},
    {"offset": {"line": 1624, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/menus/TldrawUiMenuToolItem.tsx"],"sourcesContent":["import { useTools } from '../../../hooks/useTools'\nimport { TldrawUiMenuItem, TLUiMenuItemProps } from './TldrawUiMenuItem'\n\n/** @public */\nexport type TLUiMenuToolItemProps = {\n\ttoolId?: string\n} & Pick<TLUiMenuItemProps, 'isSelected' | 'disabled'>\n\n/** @public @react */\nexport function TldrawUiMenuToolItem({ toolId = '', ...rest }: TLUiMenuToolItemProps) {\n\tconst tools = useTools()\n\tconst tool = tools[toolId]\n\tif (!tool) return null\n\treturn <TldrawUiMenuItem {...tool} {...rest} />\n}\n"],"names":[],"mappings":";;;;AAaQ;AAbR,SAAS,gBAAgB;AACzB,SAAS,wBAA2C;;;;AAQ7C,SAAS,qBAAqB,EAAE,SAAS,EAAA,EAAI,GAAG,KAAK,CAAA,EAA0B;IACrF,MAAM,YAAQ,oLAAA,CAAS;IACvB,MAAM,OAAO,KAAA,CAAM,MAAM,CAAA;IACzB,IAAI,CAAC,KAAM,CAAA,OAAO;IAClB,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,gOAAA,EAAA;QAAkB,GAAG,IAAA;QAAO,GAAG,IAAA;IAAA,CAAM;AAC9C","debugId":null}},
    {"offset": {"line": 1649, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/TldrawUiPopover.tsx"],"sourcesContent":["import { useContainer } from '@tldraw/editor'\nimport classNames from 'classnames'\nimport { Popover as _Popover } from 'radix-ui'\nimport React from 'react'\nimport { useMenuIsOpen } from '../../hooks/useMenuIsOpen'\n\n/** @public */\nexport interface TLUiPopoverProps {\n\tid: string\n\topen?: boolean\n\tchildren: React.ReactNode\n\tonOpenChange?(isOpen: boolean): void\n\tclassName?: string\n}\n\n/** @public @react */\nexport function TldrawUiPopover({ id, children, onOpenChange, open, className }: TLUiPopoverProps) {\n\tconst [isOpen, handleOpenChange] = useMenuIsOpen(id, onOpenChange)\n\n\treturn (\n\t\t<_Popover.Root onOpenChange={handleOpenChange} open={open || isOpen /* allow debugging */}>\n\t\t\t<div className={classNames('tlui-popover', className)}>{children}</div>\n\t\t</_Popover.Root>\n\t)\n}\n\n/** @public */\nexport interface TLUiPopoverTriggerProps {\n\tchildren?: React.ReactNode\n}\n\n/** @public @react */\nexport function TldrawUiPopoverTrigger({ children }: TLUiPopoverTriggerProps) {\n\treturn (\n\t\t<_Popover.Trigger asChild dir=\"ltr\">\n\t\t\t{children}\n\t\t</_Popover.Trigger>\n\t)\n}\n\n/** @public */\nexport interface TLUiPopoverContentProps {\n\tchildren: React.ReactNode\n\tside: 'top' | 'bottom' | 'left' | 'right'\n\talign?: 'start' | 'center' | 'end'\n\talignOffset?: number\n\tsideOffset?: number\n\tdisableEscapeKeyDown?: boolean\n\tautoFocusFirstButton?: boolean\n}\n\n/** @public @react */\nexport function TldrawUiPopoverContent({\n\tside,\n\tchildren,\n\talign = 'center',\n\tsideOffset = 8,\n\talignOffset = 0,\n\tdisableEscapeKeyDown = false,\n\tautoFocusFirstButton = true,\n}: TLUiPopoverContentProps) {\n\tconst container = useContainer()\n\tconst ref = React.useRef<HTMLDivElement>(null)\n\n\tconst handleOpenAutoFocus = React.useCallback(() => {\n\t\tif (!autoFocusFirstButton) return\n\t\tconst buttons = (ref.current?.querySelectorAll('button:not([disabled])') ?? []) as HTMLElement[]\n\t\tconst visibleButtons = [...buttons].filter(\n\t\t\t(button) => button.offsetWidth || button.offsetHeight\n\t\t)\n\t\tconst firstButton = visibleButtons[0]\n\t\tif (firstButton) firstButton.focus()\n\t}, [autoFocusFirstButton])\n\n\treturn (\n\t\t<_Popover.Portal container={container}>\n\t\t\t<_Popover.Content\n\t\t\t\tclassName=\"tlui-popover__content\"\n\t\t\t\tside={side}\n\t\t\t\tsideOffset={sideOffset}\n\t\t\t\talign={align}\n\t\t\t\talignOffset={alignOffset}\n\t\t\t\tdir=\"ltr\"\n\t\t\t\tref={ref}\n\t\t\t\tonOpenAutoFocus={handleOpenAutoFocus}\n\t\t\t\tonEscapeKeyDown={(e) => disableEscapeKeyDown && e.preventDefault()}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t\t{/* <StyledArrow /> */}\n\t\t\t</_Popover.Content>\n\t\t</_Popover.Portal>\n\t)\n}\n"],"names":[],"mappings":";;;;;;;;AAqBG;;AArBH,SAAS,oBAAoB;AAC7B,OAAO,gBAAgB;AACvB,SAAS,WAAW,gBAAgB;AACpC,OAAO,WAAW;AAClB,SAAS,qBAAqB;;;;;;;AAYvB,SAAS,gBAAgB,EAAE,EAAA,EAAI,QAAA,EAAU,YAAA,EAAc,IAAA,EAAM,SAAA,CAAU,CAAA,EAAqB;IAClG,MAAM,CAAC,QAAQ,gBAAgB,CAAA,OAAI,8LAAA,EAAc,IAAI,YAAY;IAEjE,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,IAAA,EAAT;QAAc,cAAc;QAAkB,MAAM,QAAQ;QAC5D,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;YAAI,eAAW,8IAAA,EAAW,gBAAgB,SAAS;YAAI;QAAA,CAAS;IAAA,CAClE;AAEF;AAQO,SAAS,uBAAuB,EAAE,QAAA,CAAS,CAAA,EAA4B;IAC7E,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,OAAA,EAAT;QAAiB,SAAO;QAAC,KAAI;QAC5B;IAAA,CACF;AAEF;AAcO,SAAS,uBAAuB,EACtC,IAAA,EACA,QAAA,EACA,QAAQ,QAAA,EACR,aAAa,CAAA,EACb,cAAc,CAAA,EACd,uBAAuB,KAAA,EACvB,uBAAuB,IAAA,EACxB,EAA4B;IAC3B,MAAM,gBAAY,kMAAA,CAAa;IAC/B,MAAM,MAAM,gNAAA,CAAM,MAAA,CAAuB,IAAI;IAE7C,MAAM,sBAAsB,gNAAA,CAAM,WAAA,CAAY,MAAM;QACnD,IAAI,CAAC,qBAAsB,CAAA;QAC3B,MAAM,UAAW,IAAI,OAAA,EAAS,iBAAiB,wBAAwB,KAAK,CAAC,CAAA;QAC7E,MAAM,iBAAiB,CAAC;eAAG,OAAO;SAAA,CAAE,MAAA,CACnC,CAAC,SAAW,OAAO,WAAA,IAAe,OAAO,YAAA;QAE1C,MAAM,cAAc,cAAA,CAAe,CAAC,CAAA;QACpC,IAAI,YAAa,CAAA,YAAY,KAAA,CAAM;IACpC,GAAG;QAAC,oBAAoB;KAAC;IAEzB,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,MAAA,EAAT;QAAgB;QAChB,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,iNAAA,CAAS,OAAA,EAAT;YACA,WAAU;YACV;YACA;YACA;YACA;YACA,KAAI;YACJ;YACA,iBAAiB;YACjB,iBAAiB,CAAC,IAAM,wBAAwB,EAAE,cAAA,CAAe;YAEhE;QAAA;IAEF,CACD;AAEF","debugId":null}},
    {"offset": {"line": 1724, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/Button/TldrawUiButtonCheck.tsx"],"sourcesContent":["import { useTranslation } from '../../../hooks/useTranslation/useTranslation'\nimport { TldrawUiIcon } from '../TldrawUiIcon'\n\n/** @public */\nexport interface TLUiButtonCheckProps {\n\tchecked: boolean\n}\n\n/** @public @react */\nexport function TldrawUiButtonCheck({ checked }: TLUiButtonCheckProps) {\n\tconst msg = useTranslation()\n\treturn (\n\t\t<TldrawUiIcon\n\t\t\tdata-checked={!!checked}\n\t\t\tlabel={msg(checked ? 'ui.checked' : 'ui.unchecked')}\n\t\t\ticon={checked ? 'check' : 'none'}\n\t\t\tclassName=\"tlui-button__icon\"\n\t\t\tsmall\n\t\t/>\n\t)\n}\n"],"names":[],"mappings":";;;;AAYE;AAZF,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB;;;;AAQtB,SAAS,oBAAoB,EAAE,OAAA,CAAQ,CAAA,EAAyB;IACtE,MAAM,UAAM,kNAAA,CAAe;IAC3B,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,+MAAA,EAAA;QACA,gBAAc,CAAC,CAAC;QAChB,OAAO,IAAI,UAAU,eAAe,cAAc;QAClD,MAAM,UAAU,UAAU;QAC1B,WAAU;QACV,OAAK;IAAA;AAGR","debugId":null}},
    {"offset": {"line": 1750, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/menus/TldrawUiMenuCheckboxItem.tsx"],"sourcesContent":["import { preventDefault } from '@tldraw/editor'\nimport { ContextMenu as _ContextMenu, DropdownMenu as _DropdownMenu } from 'radix-ui'\nimport { unwrapLabel } from '../../../context/actions'\nimport { TLUiEventSource } from '../../../context/events'\nimport { useReadonly } from '../../../hooks/useReadonly'\nimport { TLUiTranslationKey } from '../../../hooks/useTranslation/TLUiTranslationKey'\nimport { useTranslation } from '../../../hooks/useTranslation/useTranslation'\nimport { TldrawUiIcon, TLUiIconJsx } from '../TldrawUiIcon'\nimport { TldrawUiKbd } from '../TldrawUiKbd'\nimport { useTldrawUiMenuContext } from './TldrawUiMenuContext'\n\n/** @public */\nexport interface TLUiMenuCheckboxItemProps<\n\tTranslationKey extends string = string,\n\tIconType extends string = string,\n> {\n\ticon?: IconType | TLUiIconJsx\n\tid: string\n\tkbd?: string\n\ttitle?: string\n\tlabel?: TranslationKey | { [key: string]: TranslationKey }\n\tlang?: string\n\treadonlyOk?: boolean\n\tonSelect(source: TLUiEventSource): Promise<void> | void\n\ttoggle?: boolean\n\tchecked?: boolean\n\tdisabled?: boolean\n}\n\n/** @public @react */\nexport function TldrawUiMenuCheckboxItem<\n\tTranslationKey extends string = string,\n\tIconType extends string = string,\n>({\n\tid,\n\tkbd,\n\tlabel,\n\tlang,\n\treadonlyOk,\n\tonSelect,\n\ttoggle = false,\n\tdisabled = false,\n\tchecked = false,\n}: TLUiMenuCheckboxItemProps<TranslationKey, IconType>) {\n\tconst { type: menuType, sourceId } = useTldrawUiMenuContext()\n\tconst isReadonlyMode = useReadonly()\n\tconst msg = useTranslation()\n\n\t// If the editor is in readonly mode and the item is not marked as readonlyok, return null\n\tif (isReadonlyMode && !readonlyOk) return null\n\n\tconst labelToUse = unwrapLabel(label, menuType)\n\tconst labelStr = labelToUse ? msg(labelToUse as TLUiTranslationKey) : undefined\n\n\tswitch (menuType) {\n\t\tcase 'menu': {\n\t\t\treturn (\n\t\t\t\t<_DropdownMenu.CheckboxItem\n\t\t\t\t\tdir=\"ltr\"\n\t\t\t\t\tlang={lang}\n\t\t\t\t\tclassName=\"tlui-button tlui-button__menu tlui-button__checkbox\"\n\t\t\t\t\ttitle={labelStr}\n\t\t\t\t\tonSelect={(e) => {\n\t\t\t\t\t\tonSelect?.(sourceId)\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tchecked={checked}\n\t\t\t\t>\n\t\t\t\t\t<TldrawUiIcon\n\t\t\t\t\t\tsmall\n\t\t\t\t\t\tlabel={msg(checked ? 'ui.checked' : 'ui.unchecked')}\n\t\t\t\t\t\ticon={toggle ? (checked ? 'toggle-on' : 'toggle-off') : checked ? 'check' : 'none'}\n\t\t\t\t\t/>\n\t\t\t\t\t{labelStr && (\n\t\t\t\t\t\t<span className=\"tlui-button__label\" draggable={false}>\n\t\t\t\t\t\t\t{labelStr}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{kbd && <TldrawUiKbd>{kbd}</TldrawUiKbd>}\n\t\t\t\t</_DropdownMenu.CheckboxItem>\n\t\t\t)\n\t\t}\n\t\tcase 'context-menu': {\n\t\t\treturn (\n\t\t\t\t<_ContextMenu.CheckboxItem\n\t\t\t\t\tkey={id}\n\t\t\t\t\tclassName=\"tlui-button tlui-button__menu tlui-button__checkbox\"\n\t\t\t\t\tdir=\"ltr\"\n\t\t\t\t\tlang={lang}\n\t\t\t\t\ttitle={labelStr}\n\t\t\t\t\tonSelect={(e) => {\n\t\t\t\t\t\tonSelect(sourceId)\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tchecked={checked}\n\t\t\t\t>\n\t\t\t\t\t<TldrawUiIcon\n\t\t\t\t\t\tsmall\n\t\t\t\t\t\tlabel={msg(checked ? 'ui.checked' : 'ui.unchecked')}\n\t\t\t\t\t\ticon={toggle ? (checked ? 'toggle-on' : 'toggle-off') : checked ? 'check' : 'none'}\n\t\t\t\t\t/>\n\t\t\t\t\t{labelStr && (\n\t\t\t\t\t\t<span className=\"tlui-button__label\" draggable={false}>\n\t\t\t\t\t\t\t{labelStr}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{kbd && <TldrawUiKbd>{kbd}</TldrawUiKbd>}\n\t\t\t\t</_ContextMenu.CheckboxItem>\n\t\t\t)\n\t\t}\n\t\tdefault: {\n\t\t\t// no checkbox items in actions menu\n\t\t\treturn null\n\t\t}\n\t}\n}\n"],"names":[],"mappings":";;;;AAyDI,SAYC,KAZD;;AAzDJ,SAAS,sBAAsB;;AAC/B,SAAS,eAAe,cAAc,gBAAgB,qBAAqB;AAC3E,SAAS,mBAAmB;AAE5B,SAAS,mBAAmB;AAE5B,SAAS,sBAAsB;AAC/B,SAAS,oBAAiC;AAC1C,SAAS,mBAAmB;AAC5B,SAAS,8BAA8B;;;;;;;;;;AAqBhC,SAAS,yBAGd,EACD,EAAA,EACA,GAAA,EACA,KAAA,EACA,IAAA,EACA,UAAA,EACA,QAAA,EACA,SAAS,KAAA,EACT,WAAW,KAAA,EACX,UAAU,KAAA,EACX,EAAwD;IACvD,MAAM,EAAE,MAAM,QAAA,EAAU,QAAA,CAAS,CAAA,OAAI,yOAAA,CAAuB;IAC5D,MAAM,qBAAiB,0LAAA,CAAY;IACnC,MAAM,UAAM,kNAAA,CAAe;IAG3B,IAAI,kBAAkB,CAAC,WAAY,CAAA,OAAO;IAE1C,MAAM,iBAAa,wLAAA,EAAY,OAAO,QAAQ;IAC9C,MAAM,WAAW,aAAa,IAAI,UAAgC,IAAI,KAAA;IAEtE,OAAQ,UAAU;QACjB,KAAK;YAAQ;gBACZ,OACC,aAAA,GAAA,IAAA,+NAAA,EAAC,oOAAA,CAAc,YAAA,EAAd;oBACA,KAAI;oBACJ;oBACA,WAAU;oBACV,OAAO;oBACP,UAAU,CAAC,MAAM;wBAChB,WAAW,QAAQ;wBACnB,IAAA,2LAAA,EAAe,CAAC;oBACjB;oBACA;oBACA;oBAEA,UAAA;wBAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,+MAAA,EAAA;4BACA,OAAK;4BACL,OAAO,IAAI,UAAU,eAAe,cAAc;4BAClD,MAAM,SAAU,UAAU,cAAc,eAAgB,UAAU,UAAU;wBAAA;wBAE5E,YACA,aAAA,GAAA,IAAA,8NAAA,EAAC,QAAA;4BAAK,WAAU;4BAAqB,WAAW;4BAC9C,UAAA;wBAAA,CACF;wBAEA,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,6MAAA,EAAA;4BAAa,UAAA;wBAAA,CAAI;qBAAA;gBAAA;YAG7B;QACA,KAAK;YAAgB;gBACpB,OACC,aAAA,GAAA,IAAA,+NAAA,EAAC,iOAAA,CAAa,YAAA,EAAb;oBAEA,WAAU;oBACV,KAAI;oBACJ;oBACA,OAAO;oBACP,UAAU,CAAC,MAAM;wBAChB,SAAS,QAAQ;wBACjB,IAAA,2LAAA,EAAe,CAAC;oBACjB;oBACA;oBACA;oBAEA,UAAA;wBAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,+MAAA,EAAA;4BACA,OAAK;4BACL,OAAO,IAAI,UAAU,eAAe,cAAc;4BAClD,MAAM,SAAU,UAAU,cAAc,eAAgB,UAAU,UAAU;wBAAA;wBAE5E,YACA,aAAA,GAAA,IAAA,8NAAA,EAAC,QAAA;4BAAK,WAAU;4BAAqB,WAAW;4BAC9C,UAAA;wBAAA,CACF;wBAEA,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,6MAAA,EAAA;4BAAa,UAAA;wBAAA,CAAI;qBAAA;gBAAA,GAtBrB;YAyBR;QACA;YAAS;gBAER,OAAO;YACR;IACD;AACD","debugId":null}},
    {"offset": {"line": 1854, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/menus/TldrawUiMenuSubmenu.tsx"],"sourcesContent":["import { useContainer } from '@tldraw/editor'\nimport { ContextMenu as _ContextMenu } from 'radix-ui'\nimport { ReactNode } from 'react'\nimport { useMenuIsOpen } from '../../../hooks/useMenuIsOpen'\nimport { TLUiTranslationKey } from '../../../hooks/useTranslation/TLUiTranslationKey'\nimport { useTranslation } from '../../../hooks/useTranslation/useTranslation'\nimport { TldrawUiButton } from '../Button/TldrawUiButton'\nimport { TldrawUiButtonIcon } from '../Button/TldrawUiButtonIcon'\nimport { TldrawUiButtonLabel } from '../Button/TldrawUiButtonLabel'\nimport {\n\tTldrawUiDropdownMenuSub,\n\tTldrawUiDropdownMenuSubContent,\n\tTldrawUiDropdownMenuSubTrigger,\n} from '../TldrawUiDropdownMenu'\nimport { useTldrawUiMenuContext } from './TldrawUiMenuContext'\n\n/** @public */\nexport interface TLUiMenuSubmenuProps<Translation extends string = string> {\n\tid: string\n\tlabel?: Translation | { [key: string]: Translation }\n\tdisabled?: boolean\n\tchildren: ReactNode\n\tsize?: 'tiny' | 'small' | 'medium' | 'wide'\n}\n\n/** @public @react */\nexport function TldrawUiMenuSubmenu<Translation extends string = string>({\n\tid,\n\tdisabled = false,\n\tlabel,\n\tsize = 'small',\n\tchildren,\n}: TLUiMenuSubmenuProps<Translation>) {\n\tconst { type: menuType, sourceId } = useTldrawUiMenuContext()\n\tconst container = useContainer()\n\tconst msg = useTranslation()\n\tconst labelToUse = label\n\t\t? typeof label === 'string'\n\t\t\t? label\n\t\t\t: (label[menuType] ?? label['default'])\n\t\t: undefined\n\tconst labelStr = labelToUse ? msg(labelToUse as TLUiTranslationKey) : undefined\n\n\tswitch (menuType) {\n\t\tcase 'menu': {\n\t\t\treturn (\n\t\t\t\t<TldrawUiDropdownMenuSub id={`${sourceId}-sub.${id}`}>\n\t\t\t\t\t<TldrawUiDropdownMenuSubTrigger\n\t\t\t\t\t\tid={`${sourceId}-sub.${id}-button`}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tlabel={labelStr!}\n\t\t\t\t\t\ttitle={labelStr!}\n\t\t\t\t\t/>\n\t\t\t\t\t<TldrawUiDropdownMenuSubContent id={`${sourceId}-sub.${id}-content`} size={size}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</TldrawUiDropdownMenuSubContent>\n\t\t\t\t</TldrawUiDropdownMenuSub>\n\t\t\t)\n\t\t}\n\t\tcase 'context-menu': {\n\t\t\tif (disabled) return null\n\n\t\t\treturn (\n\t\t\t\t<ContextMenuSubWithMenu id={`${sourceId}-sub.${id}`}>\n\t\t\t\t\t<_ContextMenu.ContextMenuSubTrigger dir=\"ltr\" disabled={disabled} asChild>\n\t\t\t\t\t\t<TldrawUiButton\n\t\t\t\t\t\t\tdata-testid={`${sourceId}-sub.${id}-button`}\n\t\t\t\t\t\t\ttype=\"menu\"\n\t\t\t\t\t\t\tclassName=\"tlui-menu__submenu__trigger\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TldrawUiButtonLabel>{labelStr}</TldrawUiButtonLabel>\n\t\t\t\t\t\t\t<TldrawUiButtonIcon icon=\"chevron-right\" small />\n\t\t\t\t\t\t</TldrawUiButton>\n\t\t\t\t\t</_ContextMenu.ContextMenuSubTrigger>\n\t\t\t\t\t<_ContextMenu.ContextMenuPortal container={container}>\n\t\t\t\t\t\t<_ContextMenu.ContextMenuSubContent\n\t\t\t\t\t\t\tdata-testid={`${sourceId}-sub.${id}-content`}\n\t\t\t\t\t\t\tclassName=\"tlui-menu tlui-menu__submenu__content\"\n\t\t\t\t\t\t\talignOffset={-1}\n\t\t\t\t\t\t\tsideOffset={-4}\n\t\t\t\t\t\t\tcollisionPadding={4}\n\t\t\t\t\t\t\tdata-size={size}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</_ContextMenu.ContextMenuSubContent>\n\t\t\t\t\t</_ContextMenu.ContextMenuPortal>\n\t\t\t\t</ContextMenuSubWithMenu>\n\t\t\t)\n\t\t}\n\t\tdefault: {\n\t\t\t// no submenus in actions\n\t\t\treturn children\n\t\t}\n\t}\n}\n\n/** @private */\nexport interface TLUiContextMenuSubProps {\n\tid: string\n\tchildren: ReactNode\n}\n\n/** @private */\nexport function ContextMenuSubWithMenu({ id, children }: TLUiContextMenuSubProps) {\n\tconst [open, onOpenChange] = useMenuIsOpen(id)\n\n\treturn (\n\t\t<_ContextMenu.ContextMenuSub open={open} onOpenChange={onOpenChange}>\n\t\t\t{children}\n\t\t</_ContextMenu.ContextMenuSub>\n\t)\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1967, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/TldrawUiSlider.tsx"],"sourcesContent":["import { tltime } from '@tldraw/editor'\nimport { Slider as _Slider } from 'radix-ui'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { TLUiTranslationKey } from '../../hooks/useTranslation/TLUiTranslationKey'\nimport { useTranslation } from '../../hooks/useTranslation/useTranslation'\nimport { TldrawUiTooltip, tooltipManager } from './TldrawUiTooltip'\n\n/** @public */\nexport interface TLUiSliderProps {\n\tmin?: number\n\tsteps: number\n\tvalue: number | null\n\tlabel: string\n\ttitle: string\n\tonValueChange(value: number): void\n\tonHistoryMark?(id: string): void\n\t'data-testid'?: string\n\tariaValueModifier?: number\n}\n\n/** @public @react */\nexport const TldrawUiSlider = React.forwardRef<HTMLDivElement, TLUiSliderProps>(function Slider(\n\t{\n\t\tonHistoryMark,\n\t\ttitle,\n\t\tmin,\n\t\tsteps,\n\t\tvalue,\n\t\tlabel,\n\t\tonValueChange,\n\t\t['data-testid']: testId,\n\t\tariaValueModifier = 1,\n\t}: TLUiSliderProps,\n\tref\n) {\n\tconst msg = useTranslation()\n\tconst [titleAndLabel, setTitleAndLabel] = useState('')\n\n\t// XXX: Radix starts out our slider with a tabIndex of 0\n\t// This causes some tab focusing issues, most prevelant in MobileStylePanel,\n\t// where it grabs the focus. This works around it.\n\tconst [tabIndex, setTabIndex] = useState(-1)\n\tuseEffect(() => {\n\t\tsetTabIndex(0)\n\t}, [])\n\n\tconst handleValueChange = useCallback(\n\t\t(value: number[]) => {\n\t\t\tonValueChange(value[0])\n\t\t},\n\t\t[onValueChange]\n\t)\n\n\tconst handlePointerDown = useCallback(() => {\n\t\ttooltipManager.hideAllTooltips()\n\t\tonHistoryMark?.('click slider')\n\t}, [onHistoryMark])\n\n\t// N.B. This is a bit silly. The Radix slider auto-focuses which\n\t// triggers TldrawUiTooltip handleFocus when we dbl-click to edit an image,\n\t// which in turn makes the tooltip display prematurely.\n\t// This makes it wait until we've focused to show the tooltip.\n\tuseEffect(() => {\n\t\tconst timeout = tltime.setTimeout(\n\t\t\t'set title and label',\n\t\t\t() => {\n\t\t\t\tsetTitleAndLabel(title + ' \u2014 ' + msg(label as TLUiTranslationKey))\n\t\t\t},\n\t\t\t0\n\t\t)\n\t\treturn () => clearTimeout(timeout)\n\t}, [label, msg, title])\n\n\t// N.B. Annoying. For a11y purposes, we need Tab to work.\n\t// For some reason, Radix has some custom behavior here\n\t// that interferes with tabbing past the slider and then\n\t// you get stuck in the slider.\n\tconst handleKeyEvent = useCallback((event: React.KeyboardEvent) => {\n\t\tif (event.key === 'Tab') {\n\t\t\tevent.stopPropagation()\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<div className=\"tlui-slider__container\">\n\t\t\t<TldrawUiTooltip content={titleAndLabel}>\n\t\t\t\t<_Slider.Root\n\t\t\t\t\tdata-testid={testId}\n\t\t\t\t\tclassName=\"tlui-slider\"\n\t\t\t\t\tdir=\"ltr\"\n\t\t\t\t\tmin={min ?? 0}\n\t\t\t\t\tmax={steps}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tvalue={value !== null ? [value] : undefined}\n\t\t\t\t\tonPointerDown={handlePointerDown}\n\t\t\t\t\tonValueChange={handleValueChange}\n\t\t\t\t\tonKeyDownCapture={handleKeyEvent}\n\t\t\t\t\tonKeyUpCapture={handleKeyEvent}\n\t\t\t\t>\n\t\t\t\t\t<_Slider.Track className=\"tlui-slider__track\" dir=\"ltr\">\n\t\t\t\t\t\t{value !== null && <_Slider.Range className=\"tlui-slider__range\" dir=\"ltr\" />}\n\t\t\t\t\t</_Slider.Track>\n\t\t\t\t\t{value !== null && (\n\t\t\t\t\t\t<_Slider.Thumb\n\t\t\t\t\t\t\taria-valuemin={(min ?? 0) * ariaValueModifier}\n\t\t\t\t\t\t\taria-valuenow={value * ariaValueModifier}\n\t\t\t\t\t\t\taria-valuemax={steps * ariaValueModifier}\n\t\t\t\t\t\t\taria-label={titleAndLabel}\n\t\t\t\t\t\t\tclassName=\"tlui-slider__thumb\"\n\t\t\t\t\t\t\tdir=\"ltr\"\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\ttabIndex={tabIndex}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</_Slider.Root>\n\t\t\t</TldrawUiTooltip>\n\t\t</div>\n\t)\n})\n"],"names":["value"],"mappings":";;;;AAsFI,SAcqB,KAdrB;;AAtFJ,SAAS,cAAc;AACvB,SAAS,UAAU,eAAe;AAClC,OAAO,SAAS,aAAa,WAAW,gBAAgB;AAExD,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB,sBAAsB;;;;;;;AAgBzC,MAAM,iBAAiB,gNAAA,CAAM,UAAA,CAA4C,SAAS,OACxF,EACC,aAAA,EACA,KAAA,EACA,GAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACA,aAAA,EACA,CAAC,aAAa,CAAA,EAAG,MAAA,EACjB,oBAAoB,CAAA,EACrB,EACA,GAAA,EACC;IACD,MAAM,UAAM,kNAAA,CAAe;IAC3B,MAAM,CAAC,eAAe,gBAAgB,CAAA,OAAI,iNAAA,EAAS,EAAE;IAKrD,MAAM,CAAC,UAAU,WAAW,CAAA,OAAI,iNAAA,EAAS,CAAA,CAAE;IAC3C,IAAA,kNAAA,EAAU,MAAM;QACf,YAAY,CAAC;IACd,GAAG,CAAC,CAAC;IAEL,MAAM,wBAAoB,oNAAA,EACzB,CAACA,WAAoB;QACpB,cAAcA,MAAAA,CAAM,CAAC,CAAC;IACvB,GACA;QAAC,aAAa;KAAA;IAGf,MAAM,wBAAoB,oNAAA,EAAY,MAAM;QAC3C,oNAAA,CAAe,eAAA,CAAgB;QAC/B,gBAAgB,cAAc;IAC/B,GAAG;QAAC,aAAa;KAAC;IAMlB,IAAA,kNAAA,EAAU,MAAM;QACf,MAAM,UAAU,sLAAA,CAAO,UAAA,CACtB,uBACA,MAAM;YACL,iBAAiB,QAAQ,aAAQ,IAAI,KAA2B,CAAC;QAClE,GACA;QAED,OAAO,IAAM,aAAa,OAAO;IAClC,GAAG;QAAC;QAAO;QAAK,KAAK;KAAC;IAMtB,MAAM,qBAAiB,oNAAA,EAAY,CAAC,UAA+B;QAClE,IAAI,MAAM,GAAA,KAAQ,OAAO;YACxB,MAAM,eAAA,CAAgB;QACvB;IACD,GAAG,CAAC,CAAC;IAEL,OACC,aAAA,GAAA,IAAA,8NAAA,EAAC,OAAA;QAAI,WAAU;QACd,UAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,qNAAA,EAAA;YAAgB,SAAS;YACzB,UAAA,aAAA,GAAA,IAAA,+NAAA,EAAC,8MAAA,CAAQ,IAAA,EAAR;gBACA,eAAa;gBACb,WAAU;gBACV,KAAI;gBACJ,KAAK,OAAO;gBACZ,KAAK;gBACL,MAAM;gBACN,OAAO,UAAU,OAAO;oBAAC,KAAK;iBAAA,GAAI,KAAA;gBAClC,eAAe;gBACf,eAAe;gBACf,kBAAkB;gBAClB,gBAAgB;gBAEhB,UAAA;oBAAA,aAAA,GAAA,IAAA,8NAAA,EAAC,8MAAA,CAAQ,KAAA,EAAR;wBAAc,WAAU;wBAAqB,KAAI;wBAChD,UAAA,UAAU,QAAQ,aAAA,GAAA,IAAA,8NAAA,EAAC,8MAAA,CAAQ,KAAA,EAAR;4BAAc,WAAU;4BAAqB,KAAI;wBAAA,CAAM;oBAAA,CAC5E;oBACC,UAAU,QACV,aAAA,GAAA,IAAA,8NAAA,EAAC,8MAAA,CAAQ,KAAA,EAAR;wBACA,iBAAA,CAAgB,OAAO,CAAA,IAAK;wBAC5B,iBAAe,QAAQ;wBACvB,iBAAe,QAAQ;wBACvB,cAAY;wBACZ,WAAU;wBACV,KAAI;wBACJ;wBACA;oBAAA;iBACD;YAAA;QAEF,CACD;IAAA,CACD;AAEF,CAAC","debugId":null}},
    {"offset": {"line": 2065, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/TldrawUiContextualToolbar.tsx"],"sourcesContent":["import {\n\tassert,\n\tBox,\n\tclamp,\n\tEditor,\n\treact,\n\tuseAtom,\n\tuseEditor,\n\tusePassThroughMouseOverEvents,\n\tusePassThroughWheelEvents,\n\tuseValue,\n\tVec,\n} from '@tldraw/editor'\nimport classNames from 'classnames'\nimport React, { RefObject, useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport { flushSync } from 'react-dom'\nimport { TldrawUiToolbar } from './TldrawUiToolbar'\n\nconst MOVE_TIMEOUT = 150\nconst HIDE_VISIBILITY_TIMEOUT = 16\nconst SHOW_VISIBILITY_TIMEOUT = 16\nconst MIN_DISTANCE_TO_REPOSITION_SQUARED = 16 ** 2\nconst TOOLBAR_GAP = 8\nconst SCREEN_MARGIN = 16\nconst HIDE_TOOLBAR_WHEN_CAMERA_IS_MOVING = false\nconst LEFT_ALIGN_TOOLBAR = false\n\n/** @public */\nexport interface TLUiContextualToolbarProps {\n\tchildren?: React.ReactNode\n\tclassName?: string\n\tisMousingDown?: boolean\n\tgetSelectionBounds(): Box | undefined\n\tchangeOnlyWhenYChanges?: boolean\n\tlabel: string\n}\n\n/**\n * A generic floating toolbar that can be used for things\n * like rich text editing, image toolbars, etc.\n *\n * @public @react\n */\nexport const TldrawUiContextualToolbar = ({\n\tchildren,\n\tclassName,\n\tisMousingDown,\n\tgetSelectionBounds,\n\tchangeOnlyWhenYChanges = false,\n\tlabel,\n}: TLUiContextualToolbarProps) => {\n\tconst editor = useEditor()\n\tconst toolbarRef = useRef<HTMLDivElement>(null)\n\n\tusePassThroughWheelEvents(toolbarRef as RefObject<HTMLDivElement>)\n\tusePassThroughMouseOverEvents(toolbarRef as RefObject<HTMLDivElement>)\n\n\tconst { isVisible, isInteractive, hide, show, position, move } =\n\t\tuseToolbarVisibilityStateMachine(changeOnlyWhenYChanges)\n\n\t// annoying react stuff: we don't want the toolbar position function to depend on the react state so we'll double with a ref\n\tconst rCouldShowToolbar = useRef(false)\n\tconst [hasValidToolbarPosition, setHasValidToolbarPosition] = useState(false)\n\n\tconst contentSizeUpdateCounter = useAtom('content size update counter', 0)\n\n\tuseEffect(() => {\n\t\tassert(toolbarRef.current)\n\t\tconst observer = new ResizeObserver(() => {\n\t\t\tcontentSizeUpdateCounter.update((n) => n + 1)\n\t\t})\n\t\tobserver.observe(toolbarRef.current)\n\t\treturn () => observer.disconnect()\n\t}, [contentSizeUpdateCounter])\n\n\tuseEffect(() => {\n\t\tlet lastContentSizeUpdateCounter = contentSizeUpdateCounter.get()\n\t\treturn react('toolbar position', function updateToolbarPositionAndDisplay() {\n\t\t\tconst toolbarElm = toolbarRef.current\n\t\t\tif (!toolbarElm) return\n\n\t\t\tconst nextContentSizeUpdateCounter = contentSizeUpdateCounter.get()\n\n\t\t\t// capture / force this to update when...\n\t\t\teditor.getCamera() // the camera moves\n\t\t\tcontentSizeUpdateCounter.get() // the toolbar size changes\n\t\t\t// undefined here means that we can't show the toolbar due to an incompatible position\n\t\t\tconst position = getToolbarScreenPosition(editor, toolbarElm, getSelectionBounds)\n\n\t\t\t// todo: when the toolbar is hidden due to the selection being off screen, it should be hidden immediately\n\t\t\t// rather than waiting for the position to settle. This is different than when the position changes due to\n\t\t\t// a change in the user's selection.\n\t\t\tif (!position) {\n\t\t\t\tif (rCouldShowToolbar.current) {\n\t\t\t\t\t// If we don't have a position, then we're not showing the toolbar\n\t\t\t\t\trCouldShowToolbar.current = false\n\t\t\t\t\tsetHasValidToolbarPosition(false)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If the camera state is moving, we want to immediately update the position\n\t\t\t\t// todo: consider hiding the toolbar while the camera is moving\n\t\t\t\tconst cameraState = editor.getCameraState()\n\t\t\t\tif (cameraState === 'moving') {\n\t\t\t\t\t// ...if we wanted this to avoid prematurely updating any positions, we'd need\n\t\t\t\t\t// to have the last updated position in page space, so that we could convert\n\t\t\t\t\t// it to screen space and update it here\n\t\t\t\t\tconst elm = toolbarRef.current\n\t\t\t\t\telm.style.setProperty('transform', `translate(${position.x}px, ${position.y}px)`)\n\t\t\t\t} else {\n\t\t\t\t\tconst moveImmediately = lastContentSizeUpdateCounter !== nextContentSizeUpdateCounter\n\t\t\t\t\t// Schedule a move to its next location\n\t\t\t\t\tmove(position.x, position.y, moveImmediately)\n\t\t\t\t}\n\n\t\t\t\t// Finally, if the toolbar was previously hidden, show it again\n\t\t\t\tif (!rCouldShowToolbar.current) {\n\t\t\t\t\trCouldShowToolbar.current = true\n\t\t\t\t\tsetHasValidToolbarPosition(true)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlastContentSizeUpdateCounter = nextContentSizeUpdateCounter\n\t\t})\n\t}, [editor, getSelectionBounds, contentSizeUpdateCounter, move])\n\n\tconst cameraState = useValue('camera state', () => editor.getCameraState(), [editor])\n\n\t// Send the hide or show events based on whether the user is clicking\n\t// and whether the toolbar's position is valid\n\tuseEffect(() => {\n\t\tif (cameraState === 'moving' && HIDE_TOOLBAR_WHEN_CAMERA_IS_MOVING) {\n\t\t\thide(true)\n\t\t\treturn\n\t\t}\n\n\t\tif (isMousingDown || !hasValidToolbarPosition) {\n\t\t\thide()\n\t\t\treturn\n\t\t}\n\n\t\tshow()\n\t}, [hasValidToolbarPosition, cameraState, isMousingDown, show, hide])\n\n\t// When the visibility changes, update the toolbar's visibility\n\tuseLayoutEffect(() => {\n\t\tconst elm = toolbarRef.current\n\t\tif (!elm) return\n\t\telm.dataset.visible = `${isVisible}`\n\t}, [isVisible, position])\n\n\t// When the position changes, update the toolbar's position on screen\n\tuseLayoutEffect(() => {\n\t\tconst elm = toolbarRef.current\n\t\tif (!elm) return\n\t\telm.style.setProperty('transform', `translate(${position.x}px, ${position.y}px)`)\n\t}, [position])\n\n\t// When the interactivity changes, update the toolbar's interactivity\n\tuseLayoutEffect(() => {\n\t\tconst elm = toolbarRef.current\n\t\tif (!elm) return\n\t\telm.dataset.interactive = `${isInteractive}`\n\t}, [isInteractive])\n\n\treturn (\n\t\t<div\n\t\t\tref={toolbarRef}\n\t\t\tdata-interactive={false}\n\t\t\tdata-visible={false}\n\t\t\tdata-testid=\"contextual-toolbar\"\n\t\t\tclassName={classNames('tlui-contextual-toolbar', className)}\n\t\t\tonPointerDown={editor.markEventAsHandled}\n\t\t>\n\t\t\t<TldrawUiToolbar\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tclassName=\"tlui-menu\"\n\t\t\t\tlabel={label}\n\t\t\t\ttooltipSide=\"top\"\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</TldrawUiToolbar>\n\t\t</div>\n\t)\n}\n\n// For convenience, let's work just with boxes here\n/** @internal */\nexport function rectToBox(rect: DOMRect): Box {\n\treturn new Box(rect.x, rect.y, rect.width, rect.height)\n}\n\nexport function getToolbarScreenPosition(\n\teditor: Editor,\n\ttoolbarElm: HTMLElement,\n\tgetSelectionBounds: () => Box | undefined\n) {\n\tconst selectionBounds = getSelectionBounds()?.clone()\n\tif (!selectionBounds) return\n\n\t// Offset the selection bounds by the viewport screen bounds (if the editor is scrolled or inset, etc)\n\tconst vsb = editor.getViewportScreenBounds()\n\tselectionBounds.x -= vsb.x\n\tselectionBounds.y -= vsb.y\n\n\t// If the selection bounds are too far off of the screen, don't show the toolbar\n\tif (\n\t\tselectionBounds.midY < SCREEN_MARGIN ||\n\t\tselectionBounds.midY > vsb.h - SCREEN_MARGIN ||\n\t\tselectionBounds.midX < SCREEN_MARGIN ||\n\t\tselectionBounds.midX > vsb.w - SCREEN_MARGIN\n\t) {\n\t\treturn\n\t}\n\n\t// Get the toolbar's screen rect as a box. Do this after we verify that there is at least one selection.\n\tconst toolbarBounds = rectToBox(toolbarElm.getBoundingClientRect())\n\n\t// Chance these are NaN? Rare case.\n\tif (!toolbarBounds.width || !toolbarBounds.height) return\n\n\t// Thrashy, only do this if we're showing the toolbar\n\t// ! this might not be needed, the container never scrolls\n\tconst { scrollLeft, scrollTop } = editor.getContainer()\n\n\t// We want to position the toolbar so that it is centered over the selection\n\t// except in the cases where it would extend off the edge of the screen.\n\n\t// Start by placing the top left corner of the toolbar so that the\n\t// toolbar would be centered above the section bounds, bumped up by the\n\n\tlet x = LEFT_ALIGN_TOOLBAR ? selectionBounds.x : selectionBounds.midX - toolbarBounds.w / 2\n\tlet y = selectionBounds.y - toolbarBounds.h - TOOLBAR_GAP\n\n\t// Clamp the position on screen.\n\tx = clamp(x, SCREEN_MARGIN, vsb.w - toolbarBounds.w - SCREEN_MARGIN)\n\ty = clamp(y, SCREEN_MARGIN, vsb.h - toolbarBounds.h - SCREEN_MARGIN)\n\n\t// Offset the position by the container's scroll position\n\tx += scrollLeft\n\ty += scrollTop\n\n\t// Round the position to the nearest pixel\n\tx = Math.round(x)\n\ty = Math.round(y)\n\n\treturn { x, y }\n}\n\nfunction sufficientlyDistant(curr: Vec, next: Vec, changeOnlyWhenYChanges: boolean) {\n\tif (changeOnlyWhenYChanges) {\n\t\treturn Vec.Sub(next, curr).y ** 2 >= MIN_DISTANCE_TO_REPOSITION_SQUARED\n\t}\n\treturn Vec.Len2(Vec.Sub(next, curr)) >= MIN_DISTANCE_TO_REPOSITION_SQUARED\n}\n\nexport function useToolbarVisibilityStateMachine(changeOnlyWhenYChanges: boolean) {\n\tconst editor = useEditor()\n\n\tconst rState = useRef<\n\t\t{ name: 'hidden' } | { name: 'showing' } | { name: 'shown' } | { name: 'hiding' }\n\t>({ name: 'hidden' })\n\n\t// The toolbar should only be interactive when in the 'shown' state\n\tconst [isInteractive, setIsInteractive] = useState(false)\n\n\t// The toolbar is visible in the 'shown' and 'hiding' states\n\tconst [isVisible, setIsVisible] = useState(false)\n\n\t// The position is updated when entering the 'shown' state or when moving while in the 'shown' state\n\tconst [position, setPosition] = useState({ x: -1000, y: -1000 })\n\n\t// The toolbar's current position\n\tconst rCurrPosition = useRef(new Vec(-1000, -1000))\n\n\t// The toolbar's proposed next position\n\tconst rNextPosition = useRef(new Vec(-1000, -1000))\n\n\t// A timeout needs to be completed before the toolbar is shown or hidden\n\tconst rStableVisibilityTimeout = useRef<any>(-1)\n\n\t// A timeout needs to be completed before the toolbar's position changes moved\n\tconst rStablePositionTimeout = useRef<any>(-1)\n\n\t/**\n\t * Send the 'move' event whenever something happens that would cause the toolbar's position to change.\n\t * Any update here will cause\n\t * If the state is 'shown', it will start a new timeout that will update the toolbar's position after it completes.\n\t */\n\tconst move = useCallback(\n\t\t(x: number, y: number, immediate = false) => {\n\t\t\t// Update the next proposed position\n\t\t\trNextPosition.current.x = x\n\t\t\trNextPosition.current.y = y\n\n\t\t\t// If the toolbar is not yet visible, don't do anything\n\t\t\tif (rState.current.name === 'hidden' || rState.current.name === 'showing') return\n\n\t\t\t// If showing or hiding, cancel the position timeout and start a new one.\n\t\t\t// When the timeout ends, if we're in the 'shown' state and the position has changed sufficiently\n\t\t\t// from the last visible position, update the position.\n\t\t\tclearTimeout(rStablePositionTimeout.current)\n\n\t\t\tconst flushMove = () => {\n\t\t\t\tif (\n\t\t\t\t\trState.current.name === 'shown' &&\n\t\t\t\t\tsufficientlyDistant(rNextPosition.current, rCurrPosition.current, changeOnlyWhenYChanges)\n\t\t\t\t) {\n\t\t\t\t\tconst { x, y } = rNextPosition.current\n\t\t\t\t\trCurrPosition.current = new Vec(x, y)\n\t\t\t\t\tif (immediate) {\n\t\t\t\t\t\tflushSync(() => setPosition({ x, y }))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetPosition({ x, y })\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (immediate) {\n\t\t\t\tflushMove()\n\t\t\t} else {\n\t\t\t\trStablePositionTimeout.current = editor.timers.setTimeout(flushMove, MOVE_TIMEOUT)\n\t\t\t}\n\t\t},\n\t\t[editor, changeOnlyWhenYChanges]\n\t)\n\n\t/**\n\t * Send the hide event whenever a change occurs that would cause the toolbar to become invisible.\n\t * If the state is 'shown', it will enter 'hiding' and then 'hidden' after a timeout completes.\n\t * If the state is 'showing', it will cancel the visibility timeout and enter 'hidden' immediately.\n\t */\n\tconst hide = useCallback(\n\t\t(immediate = false) => {\n\t\t\tswitch (rState.current.name) {\n\t\t\t\tcase 'showing': {\n\t\t\t\t\tclearTimeout(rStableVisibilityTimeout.current)\n\t\t\t\t\trState.current = { name: 'hidden' }\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'shown': {\n\t\t\t\t\trState.current = { name: 'hiding' }\n\t\t\t\t\tsetIsInteractive(false) // when leaving shown, turn back on interactions\n\n\t\t\t\t\tif (immediate) {\n\t\t\t\t\t\trState.current = { name: 'hidden' }\n\t\t\t\t\t\tsetIsVisible(false)\n\t\t\t\t\t} else {\n\t\t\t\t\t\trStableVisibilityTimeout.current = editor.timers.setTimeout(() => {\n\t\t\t\t\t\t\trState.current = { name: 'hidden' }\n\t\t\t\t\t\t\tsetIsVisible(false)\n\t\t\t\t\t\t}, HIDE_VISIBILITY_TIMEOUT)\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[editor]\n\t)\n\n\t/**\n\t * Send the show event whenever a change occurs that would cause the toolbar to become visible.\n\t * If the state is 'hidden', it will enter 'showing' and then 'shown' after a timeout completes.\n\t * If the state is 'hiding', it will cancel the visibility timeout and enter 'shown' immediately.\n\t */\n\tconst show = useCallback(() => {\n\t\tswitch (rState.current.name) {\n\t\t\tcase 'hidden': {\n\t\t\t\trState.current = { name: 'showing' }\n\t\t\t\trStableVisibilityTimeout.current = editor.timers.setTimeout(() => {\n\t\t\t\t\t// position\n\t\t\t\t\tconst { x, y } = rNextPosition.current\n\t\t\t\t\trCurrPosition.current = new Vec(x, y)\n\t\t\t\t\tsetPosition({ x, y })\n\n\t\t\t\t\trState.current = { name: 'shown' }\n\t\t\t\t\tsetIsVisible(true)\n\t\t\t\t\tsetIsInteractive(true)\n\t\t\t\t}, SHOW_VISIBILITY_TIMEOUT)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'hiding': {\n\t\t\t\t// Go back to shown immediately\n\t\t\t\tclearTimeout(rStableVisibilityTimeout.current)\n\t\t\t\trState.current = { name: 'shown' }\n\t\t\t\tsetIsInteractive(true) // when entering shown, turn back on interactions\n\t\t\t\tmove(rNextPosition.current.x, rNextPosition.current.y)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// noop\n\t\t\t}\n\t\t}\n\t}, [editor, move])\n\n\treturn { isVisible, isInteractive, show, hide, move, position }\n}\n"],"names":["position", "cameraState", "x", "y"],"mappings":"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","debugId":null}},
    {"offset": {"line": 2386, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/node_modules/tldraw/src/lib/ui/components/primitives/menus/TldrawUiMenuActionCheckboxItem.tsx"],"sourcesContent":["import { useActions } from '../../../context/actions'\nimport {\n\tTldrawUiMenuCheckboxItem,\n\ttype TLUiMenuCheckboxItemProps,\n} from './TldrawUiMenuCheckboxItem'\n\n/** @public */\nexport type TLUiMenuActionCheckboxItemProps = {\n\tactionId?: string\n} & Pick<TLUiMenuCheckboxItemProps, 'disabled' | 'checked' | 'toggle'>\n\n/** @public @react */\nexport function TldrawUiMenuActionCheckboxItem({\n\tactionId = '',\n\t...rest\n}: TLUiMenuActionCheckboxItemProps) {\n\tconst actions = useActions()\n\tconst action = actions[actionId]\n\tif (!action) return null\n\treturn <TldrawUiMenuCheckboxItem {...action} {...rest} />\n}\n"],"names":[],"mappings":";;;;AAmBQ;AAnBR,SAAS,kBAAkB;AAC3B;;;;AAWO,SAAS,+BAA+B,EAC9C,WAAW,EAAA,EACX,GAAG,MACJ,EAAoC;IACnC,MAAM,cAAU,uLAAA,CAAW;IAC3B,MAAM,SAAS,OAAA,CAAQ,QAAQ,CAAA;IAC/B,IAAI,CAAC,OAAQ,CAAA,OAAO;IACpB,OAAO,aAAA,GAAA,IAAA,8NAAA,EAAC,gPAAA,EAAA;QAA0B,GAAG,MAAA;QAAS,GAAG,IAAA;IAAA,CAAM;AACxD","debugId":null}}]
}