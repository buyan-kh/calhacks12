{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/lib/getBookmarkPreview.tsx"],"sourcesContent":["import { TLAsset } from 'tldraw';\n\nexport async function getBookmarkPreview(url: string): Promise<TLAsset> {\n  try {\n    const response = await fetch(`/api/unfurl?url=${encodeURIComponent(url)}`);\n    const data = await response.json();\n\n    return {\n      id: url as any,\n      typeName: 'asset',\n      type: 'bookmark',\n      meta: {},\n      props: {\n        src: url,\n        description: data.description ?? '',\n        image: data.image ?? '',\n        favicon: data.favicon ?? '',\n        title: data.title ?? url,\n      },\n    };\n  } catch (error) {\n    console.error('Error fetching bookmark preview:', error);\n    return {\n      id: url as any,\n      typeName: 'asset',\n      type: 'bookmark',\n      meta: {},\n      props: {\n        src: url,\n        description: '',\n        image: '',\n        favicon: '',\n        title: url,\n      },\n    };\n  }\n}\n"],"names":[],"mappings":";;;;AAEO,eAAe,mBAAmB,GAAW;IAClD,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,MAAM;QACzE,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO;YACL,IAAI;YACJ,UAAU;YACV,MAAM;YACN,MAAM,CAAC;YACP,OAAO;gBACL,KAAK;gBACL,aAAa,KAAK,WAAW,IAAI;gBACjC,OAAO,KAAK,KAAK,IAAI;gBACrB,SAAS,KAAK,OAAO,IAAI;gBACzB,OAAO,KAAK,KAAK,IAAI;YACvB;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO;YACL,IAAI;YACJ,UAAU;YACV,MAAM;YACN,MAAM,CAAC;YACP,OAAO;gBACL,KAAK;gBACL,aAAa;gBACb,OAAO;gBACP,SAAS;gBACT,OAAO;YACT;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/lib/multiplayerAssetStore.tsx"],"sourcesContent":["import { TLAssetStore } from 'tldraw';\n\nexport const multiplayerAssetStore: TLAssetStore = {\n  async upload(_asset, file) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('/api/upload', {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to upload asset');\n    }\n\n    const data = await response.json();\n    return data.url;\n  },\n\n  resolve(asset) {\n    return asset.props.src;\n  },\n};\n"],"names":[],"mappings":";;;;AAEO,MAAM,wBAAsC;IACjD,MAAM,QAAO,MAAM,EAAE,IAAI;QACvB,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QAExB,MAAM,WAAW,MAAM,MAAM,eAAe;YAC1C,QAAQ;YACR,MAAM;QACR;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,KAAK,GAAG;IACjB;IAEA,SAAQ,KAAK;QACX,OAAO,MAAM,KAAK,CAAC,GAAG;IACxB;AACF","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/components/RoomCanvas.tsx"],"sourcesContent":["'use client';\n\nimport { useSync } from '@tldraw/sync';\nimport { ReactNode, useEffect, useState } from 'react';\nimport { Tldraw } from 'tldraw';\nimport 'tldraw/tldraw.css';\nimport { getBookmarkPreview } from '@/lib/getBookmarkPreview';\nimport { multiplayerAssetStore } from '@/lib/multiplayerAssetStore';\n\ninterface RoomCanvasProps {\n  roomId: string;\n}\n\nexport function RoomCanvas({ roomId }: RoomCanvasProps) {\n  // Create a store connected to multiplayer.\n  const store = useSync({\n    // We need to know the websockets URI...\n    uri: `${typeof window !== 'undefined' ? window.location.origin : ''}/api/connect/${roomId}`,\n    // ...and how to handle static assets like images & videos\n    assets: multiplayerAssetStore,\n  });\n\n  return (\n    <RoomWrapper roomId={roomId}>\n      <Tldraw\n        // we can pass the connected store into the Tldraw component which will handle\n        // loading states & enable multiplayer UX like cursors & a presence menu\n        store={store}\n        onMount={(editor) => {\n          // when the editor is ready, we need to register our bookmark unfurling service\n          editor.registerExternalAssetHandler('url', getBookmarkPreview);\n        }}\n      />\n    </RoomWrapper>\n  );\n}\n\nfunction RoomWrapper({ children, roomId }: { children: ReactNode; roomId: string }) {\n  const [didCopy, setDidCopy] = useState(false);\n\n  useEffect(() => {\n    if (!didCopy) return;\n    const timeout = setTimeout(() => setDidCopy(false), 3000);\n    return () => clearTimeout(timeout);\n  }, [didCopy]);\n\n  return (\n    <div className=\"RoomWrapper\">\n      <div className=\"RoomWrapper-header\">\n        <WifiIcon />\n        <div>{roomId}</div>\n        <button\n          className=\"RoomWrapper-copy\"\n          onClick={() => {\n            if (typeof window !== 'undefined') {\n              navigator.clipboard.writeText(window.location.href);\n              setDidCopy(true);\n            }\n          }}\n          aria-label=\"copy room link\"\n        >\n          Copy link\n          {didCopy && <div className=\"RoomWrapper-copied\">Copied!</div>}\n        </button>\n      </div>\n      <div className=\"RoomWrapper-content\">{children}</div>\n    </div>\n  );\n}\n\nfunction WifiIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      width={16}\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M8.288 15.038a5.25 5.25 0 0 1 7.424 0M5.106 11.856c3.807-3.808 9.98-3.808 13.788 0M1.924 8.674c5.565-5.565 14.587-5.565 20.152 0M12.53 18.22l-.53.53-.53-.53a.75.75 0 0 1 1.06 0Z\"\n      />\n    </svg>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAPA;;;;;;;;AAaO,SAAS,WAAW,EAAE,MAAM,EAAmB;IACpD,2CAA2C;IAC3C,MAAM,QAAQ,IAAA,sKAAO,EAAC;QACpB,wCAAwC;QACxC,KAAK,GAAG,sCAAgC,0BAAyB,GAAG,aAAa,EAAE,QAAQ;QAC3F,0DAA0D;QAC1D,QAAQ,sJAAqB;IAC/B;IAEA,qBACE,8OAAC;QAAY,QAAQ;kBACnB,cAAA,8OAAC,iKAAM;YACL,8EAA8E;YAC9E,wEAAwE;YACxE,OAAO;YACP,SAAS,CAAC;gBACR,+EAA+E;gBAC/E,OAAO,4BAA4B,CAAC,OAAO,gJAAkB;YAC/D;;;;;;;;;;;AAIR;AAEA,SAAS,YAAY,EAAE,QAAQ,EAAE,MAAM,EAA2C;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IAEvC,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,SAAS;QACd,MAAM,UAAU,WAAW,IAAM,WAAW,QAAQ;QACpD,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;KAAQ;IAEZ,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;;;;kCACD,8OAAC;kCAAK;;;;;;kCACN,8OAAC;wBACC,WAAU;wBACV,SAAS;4BACP;;wBAIF;wBACA,cAAW;;4BACZ;4BAEE,yBAAW,8OAAC;gCAAI,WAAU;0CAAqB;;;;;;;;;;;;;;;;;;0BAGpD,8OAAC;gBAAI,WAAU;0BAAuB;;;;;;;;;;;;AAG5C;AAEA,SAAS;IACP,qBACE,8OAAC;QACC,OAAM;QACN,MAAK;QACL,SAAQ;QACR,aAAY;QACZ,QAAO;QACP,OAAO;kBAEP,cAAA,8OAAC;YACC,eAAc;YACd,gBAAe;YACf,GAAE;;;;;;;;;;;AAIV","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///Users/buyantogtokh/Documents/calhacks12/app/%5BroomId%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useParams } from 'next/navigation';\nimport { RoomCanvas } from '@/components/RoomCanvas';\n\nexport default function RoomPage() {\n  const params = useParams();\n  const roomId = params.roomId as string;\n\n  return <RoomCanvas roomId={roomId} />;\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,SAAS,OAAO,MAAM;IAE5B,qBAAO,8OAAC,uIAAU;QAAC,QAAQ;;;;;;AAC7B","debugId":null}}]
}